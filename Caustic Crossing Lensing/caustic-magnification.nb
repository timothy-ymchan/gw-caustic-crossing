(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    276660,       5570]
NotebookOptionsPosition[    270388,       5465]
NotebookOutlinePosition[    270904,       5484]
CellTagsIndexPosition[    270861,       5481]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Microlensing", " ", "setup", " ", "described", " ", "by", " ", "Oguri", 
    " ", "2017"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Beta]1", "[", 
     RowBox[{"\[Theta]1_", ",", "\[Theta]2_"}], "]"}], ":=", " ", 
    RowBox[{
     RowBox[{"\[Theta]1", "/", "\[Mu]r"}], " ", "-", " ", 
     RowBox[{"\[Theta]1", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Theta]1", "^", "2"}], " ", "+", " ", 
        RowBox[{"\[Theta]2", "^", "2"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Beta]2", "[", 
     RowBox[{"\[Theta]1_", ",", "\[Theta]2_"}], "]"}], " ", ":=", " ", 
    RowBox[{
     RowBox[{"\[Theta]2", "/", "\[Mu]t"}], "-", 
     RowBox[{"\[Theta]2", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Theta]1", "^", "2"}], "+", 
        RowBox[{"\[Theta]2", "^", "2"}]}], ")"}]}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.887404959326413*^9, 3.8874051054676285`*^9}, {
  3.887408443417694*^9, 3.887408467717557*^9}},
 CellLabel->"In[84]:=",ExpressionUUID->"5e3cc4f3-20b4-4134-b9b9-595bde6e3203"],

Cell[BoxData[
 RowBox[{"\[Beta]", ":=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Beta]1", "[", 
     RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "]"}], ",", 
    RowBox[{"\[Beta]2", "[", 
     RowBox[{"\[Theta]1", ",", "\[Theta]2"}], "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8874050950339427`*^9, 3.8874051185612574`*^9}, {
  3.887408531027445*^9, 3.887408548461709*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"a1e99ac4-be4d-4c4f-b2ab-7459cd149aad"],

Cell[BoxData[
 RowBox[{"\[Theta]", " ", ":=", 
  RowBox[{"{", 
   RowBox[{"\[Theta]1", ",", " ", "\[Theta]2"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8874051242428484`*^9, 3.887405133654707*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"fee3fe43-1b07-49b8-b9da-08f084534d52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvMagnefication", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[Beta]", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"\[Theta]", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "2"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8874051405429907`*^9, 3.8874051569132414`*^9}, {
  3.887405216517364*^9, 3.8874052907563267`*^9}, {3.8874053522744846`*^9, 
  3.8874053594331927`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0be4804c-94e8-409c-9076-c7c38b909d24"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Theta]1", "-", "\[Theta]2"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"\[Theta]1", "+", "\[Theta]2"}], ")"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "2"], "+", 
          SuperscriptBox["\[Theta]2", "2"]}], ")"}], "2"]], "+", 
      FractionBox["1", "\[Mu]r"]}], ",", 
     FractionBox[
      RowBox[{"2", " ", "\[Theta]1", " ", "\[Theta]2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Theta]1", "2"], "+", 
         SuperscriptBox["\[Theta]2", "2"]}], ")"}], "2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "\[Theta]1", " ", "\[Theta]2"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[Theta]1", "2"], "+", 
         SuperscriptBox["\[Theta]2", "2"]}], ")"}], "2"]], ",", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", 
         SuperscriptBox["\[Theta]1", "2"]}], "+", 
        SuperscriptBox["\[Theta]2", "2"]}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["\[Theta]1", "2"], "+", 
          SuperscriptBox["\[Theta]2", "2"]}], ")"}], "2"]], "+", 
      FractionBox["1", "\[Mu]t"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8874052481736994`*^9, {3.8874052806543508`*^9, 3.8874052911469965`*^9}, 
   3.887405360069909*^9, {3.8874085255506997`*^9, 3.8874085506037683`*^9}, {
   3.8874112726423197`*^9, 3.8874112968784857`*^9}, 3.8877054456014977`*^9, 
   3.8877123735055003`*^9, 3.8881877891407013`*^9, 3.8889254682860546`*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"d055ed44-a1f2-42af-86a9-f82640631bc9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InvMagnefication", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"InvMagnefication", "/.", 
      RowBox[{"\[Theta]1", "->", 
       RowBox[{"r", "*", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}]}], "/.", 
     RowBox[{"\[Theta]2", "->", 
      RowBox[{"r", "*", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}], ",", 
    RowBox[{"Assumptions", "->", 
     RowBox[{"Element", "[", 
      RowBox[{"\[Phi]", ",", "Reals"}], "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8874053629685307`*^9, 3.8874054216744003`*^9}, {
  3.8874056852606106`*^9, 3.887405719187543*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"23d917ee-3e57-4e73-b64e-e88e1b0ca9a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      FractionBox["1", "\[Mu]r"], "+", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}], 
       SuperscriptBox["r", "2"]]}], ",", 
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Phi]"}], "]"}], 
      SuperscriptBox["r", "2"]], ",", 
     RowBox[{
      FractionBox["1", "\[Mu]t"], "-", 
      FractionBox[
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Phi]"}], "]"}], 
       SuperscriptBox["r", "2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8874054231440687`*^9, {3.8874056889327545`*^9, 3.887405719628252*^9}, 
   3.887408552314413*^9, {3.8874112744962406`*^9, 3.8874112987031126`*^9}, 
   3.8877054476549463`*^9, 3.887712374850882*^9, 3.8881877907810807`*^9, 
   3.8889254701583242`*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"b9c1ad92-70db-4de4-8412-8168e67acda5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Simplify", "[", 
  RowBox[{
   RowBox[{"Det", "[", "InvMagnefication", "]"}], ",", 
   RowBox[{"Assumptions", "->", 
    RowBox[{
     RowBox[{"r", ">", "0"}], "&&", 
     RowBox[{"\[Mu]t", ">", "0"}], "&&", 
     RowBox[{"\[Mu]r", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8874057230531335`*^9, 3.8874057746991587`*^9}, {
  3.8874059884068255`*^9, 3.8874060054302416`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"0914b705-5b1c-4681-998c-292d5de97f79"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["r", "4"], "-", 
   RowBox[{"\[Mu]r", " ", "\[Mu]t"}], "+", 
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"\[Mu]r", "-", "\[Mu]t"}], ")"}], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
  RowBox[{
   SuperscriptBox["r", "4"], " ", "\[Mu]r", " ", "\[Mu]t"}]]], "Output",
 CellChangeTimes->{{3.8874057240710115`*^9, 3.8874057750368924`*^9}, {
   3.8874059996244755`*^9, 3.8874060057206693`*^9}, 3.8874085537995305`*^9, {
   3.8874112757573*^9, 3.887411300366455*^9}, 3.8877054516078863`*^9, 
   3.887712377329382*^9, 3.888187792257853*^9, 3.888925471981223*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"92b49e8a-37d3-40f0-bf65-cabd1a583bf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CriticalCurves", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "4"], "-", 
       RowBox[{"\[Mu]r", " ", "\[Mu]t"}], "+", 
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Mu]r", "-", "\[Mu]t"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], 
      RowBox[{
       SuperscriptBox["r", "4"], " ", "\[Mu]r", " ", "\[Mu]t"}]], "==", "0"}],
     " ", ",", 
    RowBox[{"{", "r", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8874085684014997`*^9, 3.887408615102344*^9}, {
  3.887408752169526*^9, 3.8874087922100844`*^9}, {3.8874088661344137`*^9, 
  3.887408867302075*^9}, {3.8874112859729996`*^9, 3.8874112867442665`*^9}, {
  3.8874122922041335`*^9, 3.887412295143611*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"2ebab91d-e9c4-4146-bd65-6ac968b9b58e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox["2"]], 
       RowBox[{"(", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Mu]r"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"\[Mu]t", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", "\[Mu]r", " ", "\[Mu]t"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Mu]r", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
                RowBox[{"\[Mu]t", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], "2"]}]]}], 
          ")"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Mu]r"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
          RowBox[{"\[Mu]t", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", "\[Mu]r", " ", "\[Mu]t"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Mu]r", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
               RowBox[{"\[Mu]t", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], "2"]}]]}], 
         ")"}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        SqrtBox["2"]], 
       RowBox[{"(", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "\[Mu]r"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
           RowBox[{"\[Mu]t", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
           SqrtBox[
            RowBox[{
             RowBox[{"4", " ", "\[Mu]r", " ", "\[Mu]t"}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"\[Mu]r", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
                RowBox[{"\[Mu]t", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], "2"]}]]}], 
          ")"}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"(", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "\[Mu]r"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
          RowBox[{"\[Mu]t", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "+", 
          SqrtBox[
           RowBox[{
            RowBox[{"4", " ", "\[Mu]r", " ", "\[Mu]t"}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Mu]r", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}], "-", 
               RowBox[{"\[Mu]t", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Phi]"}], "]"}]}]}], ")"}], "2"]}]]}], 
         ")"}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8874085790334253`*^9, 3.8874086172629485`*^9}, {
   3.887408753505246*^9, 3.887408780905048*^9}, 3.8874113018995004`*^9, 
   3.8874123102047353`*^9, 3.887705453549124*^9, 3.887712378662981*^9, 
   3.8881877941460943`*^9, 3.8889254738113565`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"c71b24c9-acd4-40ac-bbe2-98f9d3657672"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Plotting", " ", "the", " ", "critical", " ", "curves", " ", "using", " ", 
    "polar", " ", "plots"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Reference", ":", " ", "https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"reference", ".", "wolfram", ".", "com"}], "/", "language"}], 
      "/", "ref"}], "/", 
     RowBox[{"PolarPlot", ".", "html"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.887411343915737*^9, 3.887411361293419*^9}, {
  3.8874123164084873`*^9, 3.887412319681222*^9}},
 CellLabel->
  "In[100]:=",ExpressionUUID->"88430ed1-3e9c-4288-b087-57eccda1795f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"r", "/.", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"CriticalCurves", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "/.", 
         RowBox[{"\[Mu]t", "->", 
          RowBox[{"0.001", "^", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}]}]}], "/.", 
        RowBox[{"\[Mu]r", "->", 
         RowBox[{"0.1", "^", 
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}]}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PolarPlot", "[", 
    RowBox[{
     RowBox[{"r", "/.", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"CriticalCurves", "[", 
          RowBox[{"[", "3", "]"}], "]"}], "/.", 
         RowBox[{"\[Mu]t", "->", 
          RowBox[{"0.001", "^", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}]}]}], "/.", 
        RowBox[{"\[Mu]r", "->", 
         RowBox[{"0.1", "^", 
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}]}]}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "*", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Critical Curves for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(t\
\)], \(-1\)]\)=0.001, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=0.4\>\""}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8874086184364195`*^9, 3.8874086348322034`*^9}, {
   3.887411244915414*^9, 3.887411251068925*^9}, {3.8874114012526703`*^9, 
   3.887411447348766*^9}, {3.887411484025028*^9, 3.8874117116783485`*^9}, {
   3.887411786687834*^9, 3.8874118395782275`*^9}, {3.887411887507489*^9, 
   3.8874120276284237`*^9}, {3.8874120600235*^9, 3.887412259524222*^9}, {
   3.8874122976401443`*^9, 3.887412307975481*^9}, {3.8874124281036386`*^9, 
   3.887412451211836*^9}, {3.8874245790094995`*^9, 3.887424585966052*^9}, 
   3.887425642125083*^9, {3.8874270038885703`*^9, 3.887427060099991*^9}, {
   3.887427091515602*^9, 3.887427106950697*^9}, {3.8874271934417067`*^9, 
   3.8874272174841747`*^9}, {3.8874273238075533`*^9, 
   3.8874273331204357`*^9}, {3.887427403123926*^9, 3.8874274228610764`*^9}, {
   3.8874275037660875`*^9, 3.887427544263652*^9}, {3.8874471680507154`*^9, 
   3.8874471690257254`*^9}, {3.8874472053796844`*^9, 
   3.8874472069101334`*^9}, {3.8874472868312864`*^9, 
   3.8874473174867496`*^9}, {3.887447474898364*^9, 3.8874474900783587`*^9}, {
   3.8874479833478003`*^9, 3.887448034014306*^9}, {3.887448449060033*^9, 
   3.8874484502322617`*^9}, {3.8874486392716446`*^9, 
   3.8874486774825754`*^9}, {3.8874489226102962`*^9, 3.887448924682646*^9}, {
   3.8890482931176295`*^9, 3.889048320212699*^9}},
 CellLabel->"In[88]:=",ExpressionUUID->"8ee6261b-9d23-454c-b6dc-874afad923d8"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}}, {}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPQpGwSjADQD2ewHg
      "], {}], {}, {{{}, {}, {}, {}}, {}}}, {}}, {{{{}, {}}, {}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1: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
RaWuGTOYmd/pn9tN6iIuiiiVRinK1Y0WZaeUJevYslypqCjbVY5KImvINqUa
IsmlkiXpzpv/y+fzfXFePM/nfM7z5mQtafu0mYGFe1pbMtLo0OjmbH7QWczr
OqbcxX4K/US2jd4M/JK3WHo8gQ6BV3a58ZMZaCa/o+WAOA9KjykWmTcZmKR5
e5l1FB2IxK3bT5CBQR8+WUqF0UH6ZP/cu2EGMgrTgutO0+E5/NzQP8fAkTey
Cr1/if1vK5h9qswUnyu7I8qO08H4R8geLzYTJVyq3ToO0iE82jOYvo2Jnjdi
zFXdxf7Epw20ujHxx+GXClRx/quTmjhfw8RcGHgpzZoOARXrtI+lMvGD4OR9
RUs6RF3M1RIWMpGTzOi3+h8d+KddSFAHE7O3Hpo0YtBhwWy39f0hJspyz3q8
WEOHrKlXdsOzTLyfceHRVhodmAOPlZW0TdCqR52dsYwOpswE+yQvE6xcXPDP
1880uLJBa9om0ASj1YW8pR9oUCJvtGk21gQbN69M+PGGBpxfYgs0ykzQ+6L2
9S0tNHG/Ub6eLMHCjEc/JrPzabBz9Z3TzSosdAz/Gmch3k+BOrUFn/VYuCLU
XVgWR4Mpgf+ovCULY8vTdqueoUHU6VZp3xgWmgREHb1hTYMDP79O0clmYUCo
T+3rTTRgR5zj1JSwsK2ekfieRQP9Yw7nnr1g4Sm3FxEnVtFg/1XjcRVNNlpX
rX0bPKoHvIObhPtz2PjC7ZlH+lnxPvY9LOl5j43cGC/N4aN6ULX960mnOjaa
4mCklJseNNXrrJ0ZYaMnIyonn6cHxd4PrWCDmOaNH6r8pgtR1r8H9FaY4j5G
VwrviC64zJWNRjeYYrlEDyNvly649keMGPaZYo1aYnv/b7pgO8Z0XD1nin+W
PTZ4rq0L3fqidHWuGe7yCMosbtcBll8vGa40w6oL3VbpRjrg+s6uhNcg5pa2
WfvUdWBvR8H42R4zrLAgq6VkdIAvzE2pmjLDjzuNO5/2aMO26wtdDI3NcdIq
eyT4vDacM+4605hnjj7lOZdH6qlwgtevVllijl4Zt8d2FFMh8c3+upgacxyK
6RMkpVJBq2ifwYzQHI98SxssPUSFmWWOfXdVOMi/NO5oL0cFZ2f9o83+HCxd
YLQp/JwWZM63bvAN5eB5Z5/eGBst+OJUypeO5aDt55X2+6haYPf3S6V3+Rwc
zImL31+9EpZsy/ujpIODbaT5oWhWEy7fwyoPAy4GTbLq1/M1YJlId+ABg4sO
RfN1MwwNsKI2zksSLt7qMzKNk9SAjRr5/26x42K9mvxy41R1iC67ONYdwEVa
p4cR1KvBpEORzLdaLupyJEJFWisg34Y9Md/MRQYr63HHMAUoVzV3f+ziYkTR
r1JpxRSYi9UTRL7n4k2qlXrRrxS4aFAy9UCeh90yz4xGPZeDfZJrJmUbD53Y
70IMb6hC7UBZFNrxcPRs0N3C46owsmQw1s6Zhylrn3spmKnCdVqhkHWIh+3e
Nup7ny4F/3+/106H8bDU2194XKQCrLBWQ8cqHt6nhGfFL10CgmqLF06PeNh3
rNmePFeGCGp4M6+BhwHuAqW6GGWYvbzwUlmXeH7EdI+XojK8vhWZ4DzBw1bF
vtBNi5Tgwgqb2bNTPNzy28c1p0IVoZPkBIR956HMkytzvhKK0G7xT+lGOYIB
guncwkl52Kw4H8hfRZD1YcXCvS/loMkSdW/qEVx8Ore/xkHcX5Jty9r1Ca6X
NZX42PIT+FjPpDQbEyxqqi/4u2Yh6JkI645vJvhIYntcXbYMJNgI93VuJUjB
mxmp6jJA8Y9v0LAmqJ9+XHVj3AKoPJM6ZOdI8IDnoSaF89LwJVL3k48HwZBE
He9qF0kQ2bD8JjwJdicm4/Z2CVgsdzP3jyMEFbqSM8otJcD6W/y3p74ElydH
6tl6zZMHBRWa3ScIlp6Rf+vm9J28sch72eBP8JP5V+F6izlS17XX2DmQ4CLf
rls6GrNEM7bm4fR5gtmKtupbZGeIa8OCIf8Qgn+pmA6xJ6bIW6fgAXokwfCW
uqbQJ5PE64FBxY4LBOuZJODd7S9ksi1azT2aoP3V2iINwWdiezTGzzCW4GD+
904F7wnSszbgyGAcQX9+jXOT0zjJW3r3fdAVgrMO3qu6QsaIbMe1YelEgjcu
TJ5odxwlVVL9fH4SwWuHHWyvGIyQ7ZQZ/u1kgvJHX23U+j5Efjp2b6gvhSAW
DPT5tQySzF1jopFUgs1z9cWZV0UkRjHV5aWA4MCa6Z1Zvm/IunsNNiVpBF0V
HtZPR70itseKqr3Sxf7OzDb5rOsl5U6Xr8llEExMShm609ZJVp9qXxQl1k90
87m1f7YRDdHc4EexPpB3eOygUQOxSCowZWYSvEx5cELJr4YkCuJl9oi1IFS2
lup3h/z/f5JF8w93kY8k9z+xpYuJ
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$40730#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
   "\"Critical Curves for \\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \
\\(t\\)], \\(-1\\)]\\)=0.001, \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \\(r\\)], \
\\(-1\\)]\\)=0.4\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.887411840080962*^9, 3.887411890239683*^9, {3.8874119397299843`*^9, 
   3.8874119834612846`*^9}, 3.8874120289581013`*^9, {3.887412061925166*^9, 
   3.8874121407034593`*^9}, {3.8874121970645466`*^9, 3.8874122602321253`*^9}, 
   3.8874123123884835`*^9, {3.887412430185932*^9, 3.887412451774434*^9}, 
   3.8874245887541637`*^9, 3.887425644230657*^9, {3.887427010928675*^9, 
   3.8874270608354235`*^9}, {3.8874270932538843`*^9, 3.887427107572794*^9}, {
   3.887427197486698*^9, 3.887427219236844*^9}, {3.8874273257573853`*^9, 
   3.887427334082548*^9}, {3.88742741328446*^9, 3.887427423543558*^9}, {
   3.8874275094535284`*^9, 3.887427518026187*^9}, 3.8874275615037293`*^9, 
   3.8874472146525507`*^9, {3.8874473131734996`*^9, 3.887447317936658*^9}, {
   3.887447476442607*^9, 3.8874474906231318`*^9}, {3.8874480100432067`*^9, 
   3.887448034698614*^9}, 3.887448464912135*^9, 3.8874486408929205`*^9, {
   3.887448671105296*^9, 3.887448678172639*^9}, 3.887448925466633*^9, 
   3.8877054572279553`*^9, 3.887712381394617*^9, 3.888187796378069*^9, 
   3.888925476885155*^9, {3.8890482984287148`*^9, 3.889048321244526*^9}},
 CellLabel->"Out[88]=",ExpressionUUID->"18cea735-4410-48d0-8742-8c50aa5e26f4"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Plotting", " ", "the", " ", "caustics"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.887412271231414*^9, 3.887412278830715*^9}, {
  3.8874123257108545`*^9, 
  3.8874123301008635`*^9}},ExpressionUUID->"642fcf97-6edd-4aa3-82e1-\
e5ea41e7dc59"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]1", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], ",", 
          RowBox[{"\[Beta]2", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}]}], "}"}], "/.", 
        RowBox[{"CriticalCurves", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
       RowBox[{"\[Mu]t", "->", 
        RowBox[{"0.001", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}]}], "/.", 
      RowBox[{"\[Mu]r", "->", 
       RowBox[{"0.4", "^", 
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]1", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], ",", 
          RowBox[{"\[Beta]2", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}]}], "}"}], "/.", 
        RowBox[{"CriticalCurves", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], "/.", 
       RowBox[{"\[Mu]t", "->", 
        RowBox[{"0.001", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}]}], "/.", 
      RowBox[{"\[Mu]r", "->", 
       RowBox[{"0.4", "^", 
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}]}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Phi]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "->", "All"}], ",", 
   RowBox[{
   "PlotLabel", "->", 
    "\"\<Caustics for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(t\)], \
\(-1\)]\)=0.001, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \(-1\)]\
\)=0.4\>\""}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.887405050216901*^9, 3.887405050219736*^9}, {
  3.887425515096669*^9, 3.887425548605345*^9}, {3.887425610995145*^9, 
  3.887425662435582*^9}, {3.887425865844403*^9, 3.8874259082954345`*^9}, {
  3.887426693359355*^9, 3.887426734178713*^9}, {3.8874268022918677`*^9, 
  3.8874268800154967`*^9}, {3.887426957857686*^9, 3.8874269735535965`*^9}, {
  3.8874270673001657`*^9, 3.887427273035602*^9}, {3.8874273167524357`*^9, 
  3.8874273178543844`*^9}, {3.8874274319668956`*^9, 3.8874275520129967`*^9}, {
  3.887427599274452*^9, 3.887427614030192*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"c93856f9-fc6d-447e-8ca2-8ee9e5b38cad"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPQpGwSjADQD2ewHg
     "], {}], {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
3jVeJFkifkxf8ZTKr26qMSZ/9paYjf8Hsfso9A==
        "]]},
      Annotation[#, "Charting`Private`Tag$11590#1"]& ]}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
   "\"Caustics for \\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \
\\(t\\)], \\(-1\\)]\\)=0.001, \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \\(r\\)], \
\\(-1\\)]\\)=0.4\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.887425537237233*^9, 3.887425663606041*^9, {3.8874258679535475`*^9, 
   3.8874259086256227`*^9}, {3.887426694062611*^9, 3.8874267345062876`*^9}, {
   3.88742680491864*^9, 3.887426880646567*^9}, {3.8874269536584053`*^9, 
   3.887426973957609*^9}, {3.887427069370958*^9, 3.8874272061488132`*^9}, {
   3.88742723706611*^9, 3.887427273659047*^9}, 3.8874273184824347`*^9, {
   3.887427443277683*^9, 3.88742748297118*^9}, {3.8874275287231464`*^9, 
   3.887427534226881*^9}, 3.887427564292647*^9, 3.8874276147619286`*^9, 
   3.8877054590100946`*^9, 3.8877123831088047`*^9, 3.888187797738835*^9, 
   3.8889254787590103`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"d7624c4a-28b5-4c73-bbd9-c8e7d9982395"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Discussion", " ", "of", " ", "critical", " ", "curve", " ", "solutions"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.887446220591468*^9, 3.887446283370714*^9}, {
  3.887446380149229*^9, 3.887446414558996*^9}, {3.887446586292288*^9, 
  3.887446616450014*^9}, {3.8874473456582613`*^9, 3.887447391097514*^9}, {
  3.8891488586838703`*^9, 
  3.88914886156046*^9}},ExpressionUUID->"d6082083-7d08-4968-acc5-\
de1dd16ff04c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Suppose", " ", 
      SubscriptBox["\[Mu]", "r"]}], ">", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", "for", " ", "\[Phi]"}], "=", "0"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"if", " ", 
      SubscriptBox["\[Mu]", "t"]}], " ", ">", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"we", " ", "always", " ", "have", " ", "r"}], "=", 
     RowBox[{"Sqrt", "[", 
      SubscriptBox["\[Mu]", "t"], "]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"if", " ", 
      SubscriptBox["\[Mu]", "t"]}], " ", "<", " ", "0"}], ",", " ", 
    RowBox[{"we", " ", 
     RowBox[{"don", "'"}], "t", " ", "have", " ", "solution", " ", "and", " ",
      "the", " ", "lobe", " ", "is", " ", "vertical"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.887447393464697*^9, 
  3.887447537994934*^9}},ExpressionUUID->"9b8bd6fb-62c6-419f-a03a-\
35c746e31c64"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Suppose", " ", 
      SubscriptBox["\[Mu]", "r"]}], " ", ">", " ", 
     RowBox[{"0", " ", "then", " ", "for", " ", "\[Phi]"}]}], "=", 
    RowBox[{"\[Pi]", "/", "2"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"if", " ", 
      SubscriptBox["\[Mu]", "t"]}], " ", ">", " ", "0"}], ",", " ", 
    RowBox[{
     RowBox[{"we", " ", "have", " ", "r"}], "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       SubscriptBox["\[Mu]", "r"], "]"}], " ", "only"}]}], ",", " ", 
    RowBox[{
    "indicating", " ", "the", " ", "narrowest", " ", "neck", " ", "of", " ", 
     "the", " ", "lobe"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"if", " ", 
      SubscriptBox["\[Mu]", "t"]}], " ", "<", " ", "0"}], ",", 
    RowBox[{
     RowBox[{"we", " ", "have", " ", "r"}], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Sqrt", "[", 
        SubscriptBox["\[Mu]", "r"], "]"}], " ", "and", " ", "r"}], " ", "=", 
      " ", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        SubscriptBox["\[Mu]", "t"], "]"}], " ", "for", " ", "the", " ", "top",
        " ", "and", " ", "bottom", " ", "of", " ", "the", " ", "lobe"}]}]}]}],
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.8874475219123526`*^9, 3.8874475230614104`*^9}, {
  3.8874487516290884`*^9, 
  3.8874488966064367`*^9}},ExpressionUUID->"e5fa19f9-81d0-4c93-bed6-\
8ee6f539f02f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8874476622562895`*^9, 3.8874476947485375`*^9}, {
   3.88744795655855*^9, 3.8874479646058517`*^9}, {3.8874485135078487`*^9, 
   3.8874485187885647`*^9}, 3.887448908263837*^9},
 CellLabel->
  "In[252]:=",ExpressionUUID->"5e8c54a6-e072-4b95-98b5-138b2602ab2b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Caustic", " ", "crossing", " ", "time"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "The", " ", "caustic", " ", "crossing", " ", "time", " ", "is", " ", "the",
     " ", "time", " ", "needed", " ", "to", " ", "cross", " ", "the", " ", 
    "caustics"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.887448493200965*^9, 3.887448629206319*^9}, {
   3.8874487006461687`*^9, 3.8874487273685336`*^9}, 3.887448902503278*^9, {
   3.887704064590639*^9, 3.8877040696122913`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"9aa03c30-7d13-4d02-802a-f3e56a2c79e3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Msun", " ", "=", " ", "1477"}], ";"}], " ", 
  RowBox[{"(*", "m", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"kpc", " ", "=", " ", 
    RowBox[{"3.086", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", "19", ")"}]}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", "m", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Gpc", "  ", "=", 
    RowBox[{"3.086", "*", 
     RowBox[{"10", "^", 
      RowBox[{"(", "25", ")"}]}]}]}], " ", ";"}], 
  RowBox[{"(*", " ", "m", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"yr", " ", "=", " ", 
    RowBox[{"3.155692511163", "\[Times]", 
     RowBox[{"10", "^", "7"}]}]}], ";"}], " ", 
  RowBox[{"(*", "s", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.887448538206976*^9, 3.8874485393186593`*^9}, {
  3.8876910092533607`*^9, 3.8876910208709345`*^9}, {3.8876911032586746`*^9, 
  3.8876911661866803`*^9}, {3.887691555561571*^9, 3.887691560124979*^9}, {
  3.8876915938366427`*^9, 3.8876915991428604`*^9}, {3.887692244729332*^9, 
  3.887692255332105*^9}, {3.8881879693837657`*^9, 3.8881879730148373`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"9a549dd8-bb01-4348-8db5-3f501189410e"],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "u", ",", "Dls", ",", "Dl", ",", "Ds", ",", "\[Beta]w", ",", "\[Mu]t", ",", 
   "v", ",", "tE"}], "]"}]], "Input",
 CellChangeTimes->{{3.8881878463794365`*^9, 3.8881878809357967`*^9}, {
  3.8881879192353697`*^9, 3.8881879234736705`*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"6490b875-81fd-4a85-96ab-073720484bea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Theta]E", "=", 
   RowBox[{"Sqrt", "[", 
    RowBox[{"4", "*", "M", "*", 
     RowBox[{"Dls", "/", 
      RowBox[{"(", 
       RowBox[{"Ds", "*", "Dl"}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]w", " ", "=", 
    RowBox[{"\[Theta]E", "/", 
     RowBox[{"Sqrt", "[", "\[Mu]t", "]"}]}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Caustic", " ", "width", " ", "along", " ", "the", " ", "y"}], 
    "-", "axis"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u", " ", "=", 
    RowBox[{"v", "/", "Ds"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Approximated", " ", "as", " ", "the", " ", "velocity", " ", "of", " ", 
    "the", " ", "cluster", " ", "because", " ", "of", " ", "high", " ", 
    "\[Mu]t"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tE", "=", 
    RowBox[{"\[Beta]w", "/", "u"}]}], " ", ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"Einstein", " ", "crossing", " ", "time"}], " ", 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8876906964852715`*^9, 3.887690713350687*^9}, {
  3.887690761146923*^9, 3.8876907686842146`*^9}, {3.887690843583736*^9, 
  3.887690930333684*^9}, {3.8876909638487616`*^9, 3.887691000391076*^9}, {
  3.887691175925322*^9, 3.887691194722743*^9}, {3.8876914326430387`*^9, 
  3.8876914371629424`*^9}, {3.8881878307568936`*^9, 3.8881878408182726`*^9}, {
  3.888187928476048*^9, 3.8881879293483934`*^9}, {3.8881879789457903`*^9, 
  3.8881879952622466`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"4369cff3-8820-4d75-82dc-2b258f53b80a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"tE", "/.", 
         RowBox[{"M", "->", 
          RowBox[{"Msun", "*", "M"}]}]}], "/.", 
        RowBox[{"Dls", "->", 
         RowBox[{"Dls", "*", "Gpc"}]}]}], "/.", 
       RowBox[{"Ds", "->", 
        RowBox[{"Ds", "*", "Gpc"}]}]}], "/.", 
      RowBox[{"Dl", "->", 
       RowBox[{"Dl", "*", "Gpc"}]}]}], "/.", 
     RowBox[{"\[Mu]t", "->", 
      RowBox[{"100", "\[Mu]t"}]}]}], "/.", 
    RowBox[{"v", "->", 
     RowBox[{"500", "*", 
      RowBox[{"10", "^", "3"}], "*", "v"}]}]}], ")"}], "/", "yr"}]], "Input",
 CellChangeTimes->{{3.8876912138129344`*^9, 3.887691277457366*^9}, {
  3.887691346151049*^9, 3.8876914063420067`*^9}, {3.887691441987447*^9, 
  3.8876915074058137`*^9}, {3.887691602726333*^9, 3.8876916070726204`*^9}, {
  3.8876922600704308`*^9, 3.8876922645854845`*^9}, {3.8877039167749205`*^9, 
  3.8877039227808285`*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"f39b15cd-915d-4c8e-87d2-9be3e1874a8f"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2.706160313065809`", " ", "Ds", " ", 
   SqrtBox[
    FractionBox[
     RowBox[{"Dls", " ", "M"}], 
     RowBox[{"Dl", " ", "Ds"}]]]}], 
  RowBox[{"v", " ", 
   SqrtBox["\[Mu]t"]}]]], "Output",
 CellChangeTimes->{{3.888187805640666*^9, 3.888187815140583*^9}, 
   3.8881879401063876`*^9, 3.888187998805501*^9, 3.888925488580552*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"23ae38aa-07cc-424f-b987-2d0c4c44f879"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.887690879768815*^9, 
  3.88769088181145*^9}},ExpressionUUID->"96256fee-0c9b-4a05-a175-\
30ea4d2ba839"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Lens", " ", "plane", " ", "mapping", " ", "as", " ", "source", " ", "move",
    " ", "across", " ", "critical", " ", "curves"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.887703985479923*^9, 3.8877040430752687`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"de5c4d49-5664-4dcd-b0ee-a82cffd5c63f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]t", "=", 
      RowBox[{"0.01", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Mu]r", "=", 
      RowBox[{"0.4", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Beta]min", "=", "4"}], ",", 
     RowBox[{"\[Beta]max", "=", "6"}]}], "}"}], ",", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]1", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], ",", 
          RowBox[{"\[Beta]2", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}]}], "}"}], "/.", 
        RowBox[{"CriticalCurves", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]1", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], ",", 
          RowBox[{"\[Beta]2", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}]}], "}"}], "/.", 
        RowBox[{"CriticalCurves", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<Caustics for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(t\)], \
\(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``\>\"", ",", 
        RowBox[{"\[Mu]t", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}], ",", 
        RowBox[{"\[Mu]r", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8877055039725723`*^9, 3.8877055507013583`*^9}, {
  3.8877056093623643`*^9, 3.887705621548318*^9}, {3.8877096735820093`*^9, 
  3.887709695368267*^9}, {3.887709805308052*^9, 3.887709806954578*^9}, {
  3.8877098731746473`*^9, 3.8877099228995476`*^9}, {3.8877114022732353`*^9, 
  3.8877114154679527`*^9}, {3.8877118236116095`*^9, 3.887711826583029*^9}, {
  3.887712050450843*^9, 3.887712054875003*^9}, {3.8877121139225044`*^9, 
  3.887712117287459*^9}, {3.88818877959474*^9, 3.888188783000595*^9}, {
  3.8882160877267275`*^9, 3.888216098996471*^9}, {3.8882163461062756`*^9, 
  3.8882163488626957`*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"8a8c7b5b-3d33-42f3-8ed7-b70a019f3bd3"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPQpGwSjADQD2ewHg
     "], {}], {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
/3+v4H9y8fGr
        "]]},
      Annotation[#, "Charting`Private`Tag$13059#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1:eJxNzHlI0wEUB/A58UjEtly2STMtM63UhWk6xtSRYtEEVzIwNY/Eysw8IRVt
OdQObIqmrCWSMyprTpB0ydg8OkxRcFoyMyRmMDMsj9k8K6rfdw8e3/f54/s8
UrIEaWQSicT/vX/y71DC/l9dUdyhJgtfrS5uCLeCp/eaWWVkWBOxkGxrA5fc
NvQ5OsBrLgMVDBps8q3ZHuANn+Rbad+ctvg/0uF6rRjOZN/anSiHhfc4GvkI
LI4NcLT/CTvZ2q0O7aMSrmpcr3oVDcdIg4b1BXB2BV8R8xAe+/A4eOYd7Evx
uvRsATaEXOeMM3cQnnrtpnKNhI9GSN/3ZMOi1mP3ZTKYks9wqO2HN/wnGN/m
4cPRk7oUujNhVUK3H/s4zIlVsyKyYCul9dTlethz3eugqRe+2VrlIfsKz/Do
2nxnGuHGwZItJReWdvoY7dPhxdr23N4amBd3tqVNDY/dOCFSzcB9MtqmJ3Un
4WWG5/7nITCzNHbxQjLcPJ6aUn4Hzrj7okjbAVezvwTGT8PmqDgpbZsLYWHo
9xbSEdj5QKogOh6m5rg+6RLDmQpFk1gJa0bPh4on4TNx5yqbrHcRjtQF5bj5
w0VtAluVEH6UKwmvKIX9fFqZnU9hc7iD3FoHL9AL6zotPDtvLM8Yg/UPBi7q
xuGX5kr/5gm4sN2um/cJXne3GRUZ4aWVvL7AWXhu2NBhtPDH4v76mDlYPVGW
4DEPl0jIRu0SXJCeo89bhq9wPw96m+DEuR6FZAUOjRLlJa3CwXt+pNHWYJYp
SfjWwu7yMDZrA6YXKQ8ZLEwRuDMbNmF7H4nTqS34X4vwL1Gq/d4=
        "]]},
      Annotation[#, "Charting`Private`Tag$13089#1"]& ]}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Caustics for \\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \
\\(t\\)], \\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\), \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \\(r\\)], \
\\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\\)\"", 
     StringForm[
     "Caustics for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(t\)], \
\(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``", 0.01, 0.4], Editable -> False], TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8882163492187653`*^9, 3.8889254903843293`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"322bf4b9-37f2-4979-bf81-cf38a27c01fc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]t", "=", 
      RowBox[{"0.01", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Mu]r", "=", 
      RowBox[{"0.4", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Beta]min", "=", "4"}], ",", 
     RowBox[{"\[Beta]max", "=", "6"}]}], "}"}], ",", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"r", "/.", 
        RowBox[{"(", 
         RowBox[{"CriticalCurves", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "*", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"r", "/.", 
        RowBox[{"(", 
         RowBox[{"CriticalCurves", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "*", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]", "*", " ", "\[Mu]r"}], "-", 
             RowBox[{
              SqrtBox["\[Mu]r"], " ", 
              SqrtBox[
               RowBox[{"4", "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "^", "2"}], "*", " ", "\[Mu]r"}]}]]}]}], 
            ")"}]}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Case", " ", "1"}], ":", " ", "\[Theta]2"}], " ", "=", " ", 
       "0"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]", "*", " ", "\[Mu]r"}], "+", 
             RowBox[{
              SqrtBox["\[Mu]r"], " ", 
              SqrtBox[
               RowBox[{"4", "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "^", "2"}], "*", " ", "\[Mu]r"}]}]]}]}], 
            ")"}]}], ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Case", " ", "2"}], ":", " ", 
       RowBox[{"\[Theta]2", " ", "!=", " ", "0"}]}], "*)"}], " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Theta]11", ",", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"\[Mu]t", "-", 
             RowBox[{"\[Theta]11", "^", "2"}]}], "]"}]}], "}"}], "/.", 
         RowBox[{"\[Theta]11", "->", 
          RowBox[{"\[Beta]", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", "\[Mu]r"}], "-", 
              RowBox[{"1", "/", "\[Mu]t"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Theta]11", ",", 
           RowBox[{"-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"\[Mu]t", "-", 
              RowBox[{"\[Theta]11", "^", "2"}]}], "]"}]}]}], "}"}], "/.", 
         RowBox[{"\[Theta]11", "->", 
          RowBox[{"\[Beta]", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", "\[Mu]r"}], "-", 
              RowBox[{"1", "/", "\[Mu]t"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<Critical Curves for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \
\(t\)], \(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``\>\"", ",", 
        RowBox[{"\[Mu]t", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}], ",", 
        RowBox[{"\[Mu]r", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQ/U03usb8+xvHyQkKU0B0apvwHBAd4n58EYj2+6y8
AkS3XMzdCKI7D8hvA9GzFJ7uBtEOJ2ffBdF3Nzk9ANEJN4Q+geiCsCXfQPTs
w0/kLYC0fN40NRAdOOeLK4j2qS72A9ELnsikgegJS5WmgOhbLVtXgOiI5zfA
9DxmpyMg+t57kZMgWsjH8j6IvnHm8hMQ3ZZq+RZEz207AqbTAh8IWALpSefk
BUH0tKvulYo/gOr8nKtB9AHf/noQLWYa2wmif7kG94HlZTaD6aPllitANEPc
n1Ug+uXyqyz6QNqi/CaYPpfmxAmizQQ8eUE0APQfsIo=
  "],
 CellLabel->"In[22]:=",ExpressionUUID->"bc51a88a-bd7b-4a54-bbc3-867afb297f27"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}}, {}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPQpGwSjADQD2ewHg
      "], {}], {}, {{{}, {}, {}, {}}, {}}}, {}}, {{{{}, {}}, {}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1: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
hxKWQkpP7YJvoaCN+NTLhN02hey1j/VD09efKDsR3rrdaEjPzQUpNWmJnCR8
L9m90eqxMXgqft3dhrBIzYa9ZsxlsPmEziZ7wj/U9n0N2QgElifeGrgRTvni
5HEtJxTYNnQ1XyPsdMQr5ptrBPA1UqyMJGzhU/f6dUQkuHZwQjqLcFw/I91v
+CnIWMno/0E412L2yDkYAz6XMvMyEfNNMLuy6hsbB+7nJ6XuJPzBWVAxY/El
UOE+le5O+MJtSenbSkmgpFVSLI2wobmcVd2PZBAJRhYmCQvofvdVupUCZO70
au0j4r8zkKUwcXsqYFmHy/cIF+Rttt77+y3QUHCWHyA81Xg2Yio8HexJLyiF
xHpqeL17+mVfBth0r+nbG8LO5amZ5cOZQJpy3IKfyI+3gpP8Q08/gNheZrMQ
wn+anjt8X8kChmEP8q4T+bXdIKyS1pwNzhnd2MRE5J92K09jxNscQDlVxh9B
mNpRd+qd1SfQvyfOJ5/I3+0ufSq78vLBsz0q8aeIerghV/zA8WEBuOMXZCJC
1MsVrqHsrLOF4J7Vx0dthMvj9fs+ixYDilPI4Hmi3ia2RhgH3CgDcR2O4oOn
6CjEtXlXywkEfrDva2qxJ+IprC22RZTYhojHatQQ9Vx/+8yD0VkMuHbcVa4m
6l3Duow5+E0FOH/xsLywK7G+houlj8mVQHe1gncz0T/a1Z9O5HtVgrcvjeY0
z9HR7lGbZybaVYCjdikhgOg/JdJsos87vgClNx4ieheJ590zP+YGqoFAp6Zw
6CWivzz7xziRWg0+rP6n/PUyHc3v/5EfdKUG9CVPZnj6EP104Py+rQJ1wMvO
NWbZnxj/UbX/72t1wNnHpMOd6Ic6zgoWWf11IObVIZuBG3R0sttzKTe7HnA/
l9k+fJOOjNMuL+pYfAVlMoG/94fSkaJti+dCfBPYKapZJvKEjvh3Kx9yZ20G
hRUX+2eI/n6Fnhrqua8ZWAeJZTY9J+7/t3bqY3IzqLwYZ/ma+D6UxJiHqfm3
ACPZmOa4ZDpS9h/bZ6XUCq5+eBvWkUtHWxbspUNi2kDvde4h3E1HjzfsAvb9
bAOydoIqxT10tLKssZNfoB0kZq2ml/XT0fA7sWtqEe3ArWzT7X7i++h/ceWL
4q0OYIlnzsUs0pF1muauq1e7wIAo2a2T+N4+FuGXjv3UBaZTbN5dFGSg9OEX
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
31WHd6hoX8D/3/tRDHvzKF+9f81/7kQJAg==
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$13432#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, \
{}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1:eJxN0F9IU3EUB/CLpaSUD5rE2k3vHCvbnDT3MFnOXUtW2EwYE7KNWKM9ZEh/
cCmJ7BazLCFSIyam3LBSUacZlCaza6mbrrnIh5VS3Xyo+eJslWiN/kF0zg8u
Pz58z++c3++KrKcNtjiCIEr+fH93y632mlB+8Cnxb1GC6j19e8GsRPGTUYO5
Os2CNA/MDNnbHEowX1GeK5eCLZt6elzbUE4c1gxGZ/+bHtLnBDrBnL9L7TSB
KWtq6ac05N3z78b9AZhPBcngFTAfWWYcWpRrhleC6y+gP2mjoyNg/mJm5Uc7
mFnsSKxVgenohnb9Dz+cP3Y5QTgKZp9pORWD8/5eeyHKtzrGwhtRrvMHzIEZ
mH/o6ElBM5jZ9at6wAQmBtIG3SIw1Sy74V6ahv59K137H4GpjEarzYFyP1mx
rkfuHBMfJFH95Ot9RWEfzHsZiq8ZBrOx7CdV9WBGKZZkGcHc/UtXF3aiXNGY
fn7VCw63Sr9OgznjWjDSgfLkpbvLZ8B8qmGE1aFcN3OuUgCmFA8W5yJTcN+4
ZE+rF/l9xnjLbbClKUEWqwLz9ZTQXYzy8rnrHhGYNmQmpsQmwYV1E945MLfa
UNrvRrk8iZ+8BiYWckfLToApMqL8TCM//KAwIjMXZvIea8Fsc+3xugLUz61L
T8pH9VtCRRIV8oSLtsrRec+8aSobzE9/d0iRWfLVYlSK3jPmS3FmodyXI+wW
o/lla883IzPxN+1nM9F75gu+qEXofzSUHJlNR/1PtRxQIlPOe1rXDrDFLCu2
kqj/nXazV4juI3lTnY1My962NW1H9d+6fasC8G9grFNQ
        "]]},
      Annotation[#, "Charting`Private`Tag$13466#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1:eJxNzwtIkwEUBeC1isCoGelScGNOrW1piuCcIjnCPVI3dS6QIMuhjDKYaJmP
zRWabixKZBYYlDRLk6apG6OhoqiRuNTIltQodaOZpKaCNjGtIP7jhcvh48KB
G6pQyQrIJBJJ8nf/5fnSuQtr6nA+6f+k2igvbRpYUWEkq6vge3ktbftuwj6z
61dgNewX0Pqcp4ddJEV6VSNctlJo9OuAC97bPWI3fMCUXrw/MIJwPfU7/60A
bgivW++tgJXKnjT2C1hWfYfbPwuzWqtic6nHCed8GEktF8HyksaePjWcrfcV
qzvgPS1htpSv8HSefYMbcILwoxtK4RMBvGVYZvIqYUvDTv7HTli149QuzcCR
T9dGYqgswufo3cIFEew2cK5PaOCpnKj4vm7Ykuthhnrgdm9ialcwm3DTaBPF
lgZHSs2Zw+pd99nLmdtd8ECNYa/ZDTM7at26YA7h5j5h9FUpHL40mDGkhe0/
j1LFVjhAdyyZ74XjB64snw46SVioqrcWSuD7lXraQS2cscrxTVvgrceV/sFe
OK7uEvdiUCRheRGJOyWBP7EODdu1MMMlvDVphafk5YIfC3Cs/eFqWUgUYZrG
GRUng+O0Eb/zamDBq2tsoxX+1k9OWl+A5++6st6EnCK8GdE89owGjzfWCW7T
4aa1wYQzDHhG5gnrDYMPb7q2OzmwxKGbeMCD55sHJaUJu/oXaQ55Ilzr4Y8e
SYK9K9EjhmR4YLlzSCuE2+boKbkimEHvGk4Sw18Uya99Z+GiSfJYiQS2Wgzp
MinsGI0fj8nY9W+F791iJpzvT5E7smDOmMjZLoM3Wk05+mzYaWJ+VsrhP54U
CzQ=
        "]]},
      Annotation[#, "Charting`Private`Tag$13496#1"]& ]}, {}}, {
    GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQbeLRDEQqDgxQEGNSfP/iNgRf9gxf0MZ3CH5Hsebz
O0qqcP67zTUNTGEI/pv51Q9rexH8qbN/prgeRPCvOSlvSPqJ4As2t/6vNFCD
839cSiu8m4zgl537vGrabAR/wc3/bHPOI/iHa13SZzOpw/kNZ036P1gi+M90
ltycmIvEN9//umMpgv/gthBT1R0Ev6X/qdV2fg04/8C7ZGsvdwR/eWxinGY1
gq9RweUZtxnBX6T9xrz3FYJ/7J2PJ4ecJpzfHBupdDMUwX91+4nst04E3+fz
ClnevQi++zaJp5VfEPw3HeznjTS04Hwt9kUNjgkIfqJcqZnXdATfxfU43/xT
CP4+8aPrPJm04fwnPx0LHcwQfJbS7+aGmQj+3tkRx8oXIPjylyzKua4g+DJb
jrz/xK0D5x9aer5L3QHBTzIQ1gorRvBnpzFNvLUKwa9bUyC1+h6C/3tuV/ZF
MV04v1Dj7oGPvgj+pEPrLOIaEXwfDp0KhZ0I/sZYjVt6bxF8fp9YB3MFPTif
7Zlt3tRwBH95/9x99t0Ivt+bI0CE4AMAW3KrpQ==
     "], {}], {}}, {GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQbeLRDEQqDgxQEGNSfP/iNgRf9gxf0MZ3CH5Hsebz
O0qqcP67zTUNTGEI/pv51Q9rexH8qbN/prgeRPCvOSlvSPqJ4As2t/6vNFCD
839cSiu8m4zgl537vGrabAR/wc3/bHPOI/iHa13SZzOpw/kNZ036P1gi+M90
ltycmIvEN9//umMpgv/gthBT1R0Ev6X/qdV2fg04/8C7ZGsvdwR/eWxinGY1
gq9RweUZtxnBX6T9xrz3FYJ/7J2PJ4ecJpzfHBupdDMUwX91+4nst04E3+fz
ClnevQi++zaJp5VfEPw3HeznjTS04Hwt9kUNjgkIfqJcqZnXdATfxfU43/xT
CP4+8aPrPJm04fwnPx0LHcwQfJbS7+aGmQj+3tkRx8oXIPjylyzKua4g+DJb
jrz/xK0D5x9aer5L3QHBTzIQ1gorRvBnpzFNvLUKwa9bUyC1+h6C/3tuV/ZF
MV04v1Dj7oGPvgj+pEPrLOIaEXwfDp0KhZ0I/sZYjVt6bxF8fp9YB3MFPTif
7Zlt3tRwBH95/9x99t0Ivt+bI0CE4AMAW3KrpQ==
     "], {}], {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Critical Curves for \\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \
\\(t\\)], \\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\), \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \\(r\\)], \
\\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\\)\"", 
     StringForm[
     "Critical Curves for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \
\(t\)], \(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``", 0.01, 0.4], Editable -> False], TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.88771199979453*^9, 3.8877120392373304`*^9}, 
   3.8877121105884886`*^9, 3.887712393557353*^9, 3.8881880210850334`*^9, {
   3.8881883516517067`*^9, 3.888188381192094*^9}, {3.8881884168593693`*^9, 
   3.8881884914757357`*^9}, 3.8881885341285152`*^9, {3.8881887506533413`*^9, 
   3.888188760397344*^9}, 3.8882161042014008`*^9, {3.888216139443241*^9, 
   3.88821617070395*^9}, 3.8889254923922806`*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"96512699-98b9-4457-897a-cd308c5eb439"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Remark", ":", " ", 
     RowBox[{
      RowBox[{
      "Originally", " ", "I", " ", "tried", " ", "to", " ", "see", " ", "if", 
       " ", "I", " ", "can", " ", "do", " ", "the", " ", "mapping", " ", 
       "along", " ", "the", " ", "y"}], "-", "axis"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "but", " ", "turns", " ", "out", " ", "I", " ", "mixed", " ", "up", " ", 
      "x"}], "-", 
     RowBox[{
     "y", " ", "axis", " ", "and", " ", "get", " ", "a", " ", "result", " ", 
      "for", " ", "x"}], "-", 
     RowBox[{"axis", " ", "movements", " ", "instead"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"but", " ", "anyway"}], "..."}], "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Clear", "[", 
   RowBox[{"\[Mu]t", ",", "\[Mu]r"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.88821620985747*^9, 3.8882162751309414`*^9}, {
  3.8882164412874384`*^9, 3.8882164575015697`*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"98946a44-dbef-4739-9acb-fe4f8ed998e3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"\[Beta]x", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "\[Mu]t", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[Mu]r"}], "-", 
        RowBox[{"1", "/", "\[Mu]t"}]}], ")"}]}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Caustic", " ", "size", " ", "along", " ", "x", " ", "direction"}],
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.8882163654850464`*^9, 3.888216416405795*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"212d262c-3637-41ec-a651-f42f0eaa69cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", "\[Mu]r"], "-", 
    FractionBox["1", "\[Mu]t"]}], ")"}], " ", 
  SqrtBox["\[Mu]t"]}]], "Output",
 CellChangeTimes->{{3.8882163853931637`*^9, 3.88821645946074*^9}, 
   3.8889254950795593`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"f8b0040f-aba3-4127-b014-a7826edd17d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]t", "=", 
      RowBox[{"0.01", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Mu]r", "=", 
      RowBox[{"0.4", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"\[Beta]x", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "\[Mu]t", "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1", "/", "\[Mu]r"}], "-", 
       RowBox[{"1", "/", "\[Mu]t"}]}], ")"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8882164249724255`*^9, 3.888216435968637*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"09fc7755-016a-4e0a-877a-1e84f689233f"],

Cell[BoxData["3.9000000000000004`"], "Output",
 CellChangeTimes->{{3.8882164324154468`*^9, 3.88821646117017*^9}, 
   3.888925497033128*^9},
 CellLabel->"Out[24]=",ExpressionUUID->"55deacb4-245f-40aa-9c61-a484901bd768"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Vertical", " ", "crossing"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.8882173921971436`*^9, 3.888217400528224*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"7fb9aae4-649a-4b35-8900-49751db71a44"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]t", "=", 
      RowBox[{"0.01", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Mu]r", "=", 
      RowBox[{"0.4", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Beta]min", "=", "0"}], ",", 
     RowBox[{"\[Beta]max", "=", "0.05"}]}], "}"}], ",", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]1", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], ",", 
          RowBox[{"\[Beta]2", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}]}], "}"}], "/.", 
        RowBox[{"CriticalCurves", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"ParametricPlot", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Beta]1", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], ",", 
          RowBox[{"\[Beta]2", "[", 
           RowBox[{
            RowBox[{"r", "*", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"r", "*", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}]}], "}"}], "/.", 
        RowBox[{"CriticalCurves", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "t"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<Caustics for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(t\)], \
\(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``\>\"", ",", 
        RowBox[{"\[Mu]t", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}], ",", 
        RowBox[{"\[Mu]r", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8877118725611005`*^9, 3.887711874214797*^9}, 
   3.8877120439950457`*^9, {3.888217410206964*^9, 3.8882174215501366`*^9}, {
   3.888217528309125*^9, 3.8882175750322313`*^9}, {3.8882176370442142`*^9, 
   3.888217639233053*^9}, {3.888217697435704*^9, 3.888217710425848*^9}, {
   3.8882178536526957`*^9, 3.8882178542076054`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"07f9ec08-8715-453c-87e0-a1a2457c965e"],

Cell[BoxData[
 GraphicsBox[{{GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPQpGwSjADQD2ewHg
     "], {}], {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxd3Hc4lt//AHB774TIzB4hkpLn3BqIZGSHrEoLIRSVGbJnskNGISLbc25b
2XtvISsRkfW9n8/1++vnH9frer/Pudc5533ff5yH39pB7w4JERERHRkREeG/
3H9/jCjR//3Z3PLoFPnPeqxONuy4+TPmmeQEe+0cuNuo4awG/hS1ncGMHnT8
rbLBcfE92fEk2OvMhxgbN1xO9jF3NoIjBh/cHHyNc6uVkX0ni3mdR0eyOhpn
9lJakJxgPrpjPYapuJGPQbqmMoS4lwapbTbOvqO1Il4ac+AKYMwuxH0QjzVH
T2P+43Jtf7AUd6ryrXK3FGZ1B+Gle3ict3S8aask5pVw98PqetyJP4+/Fkhg
5iiezOf4hksTJtX2EMcset8l3rgT59vz5FKXCOZ9y7v4O4O41xQvUoyFCddz
V7CfaQynyvlJ+bsg5qJXH1NypnBPu9M07vNj5hclfz8yj2ONk66K48X8vG0I
ebqEs3V3cMnnxux4IUHy0RqOYcu8Oe4E5vPmptfQTRxtl53tfXbMwTkyTje3
cbFXxnWEjmP29zSN597FCQoF8powYT5SSSi/fYTL5E1oKyTH/PqOevEjSjA7
eIq7g4QR9ZI3cNYoogYu9GQdfUcMKFE+LvoSJx0Q1U8xTdnF7C/x70cBE8D/
4LMTWGFAvRQyhNV/sIGlN/WkwYuYP73lqcnhAG5/1Y+Pz2G+0rM75sMJaPp5
s5THMbf4D5i/4AFaBruD620MKPpoW/Zd+ylQD6Q8PrRgTiKv+MEsBKwo7xVc
bsAcadD43UYY6Gkb916swqzPcOgtKwZ6jvN6CeRg/ZkNu2d6SoO7XNsL+BcM
KF/7FBNT0DlwsXl8JMoNM5pDM1irCO57VlVff8KAThmcEzcgvwBeE3vfcbJl
QNNG/+IU8i8CRrnsXf9rDKhMgfzG/CUVkFTV+quXAYsj3z3vXFIH+tpnh6kp
sfZH+7+GwDXQ7XeOW/iIHiViOf1L6ooG0Kg718v8ix5Nuzz7bMrqOiCSLe4s
badHESFN9NhzHdCJZz6Je02Pom7mRUijAXgolnJ/3BNrL94t/9fLELD/kIy1
caZH16M1zy4jRoCT1/CjoCXmt1880XZjkFC90f5ckR6V2VyoizlpBk6G8Wm9
mqNDEb3O37farUBlSIamjDgdOrTLYHlH+SFgc3PTiuKhQ42bI16jUw/BORVB
/0kWOpTjdNVwxetHgHNOulppjxZtYbzDkTbyGJwZizTa/06L9kmtyrvqOoLN
gMilrLu06JChoOlbc2fApNo9g5rQokx/rfbLGp0BGWd4YdN1WvQRy62jW9Iu
QILefzv2DC26Ije7pkT5FBxJpxtcOaBBFTPVxWu+uQJE7+vozzAaVP85Z/Z8
0nNw1/erQpMXDcrRSc25wOMBzpOtHw93okH7PPx7MtM9ANvtxrB5Axo0U9LO
7d5nT9A/sJOXz0WDtqCPf7pOvARG9ZdmszKoUdVA71f8rd7A3FfvccIHKjQw
DIiCqwHgwLrB9UksFRpiQy0rlxkA6i8ugnP+VGgfK/dNhCwQ+J8/fznclgrN
ucJ393NzIHh8q9neSYAKNXsXkiFo9gYkUNeEMyVSovtUMREpNaHApHklZDiI
EvX0MuG7IR0G7oqrckS5U6Lua8Q5ID0MxDPJMPYYUKK2GYMNm8HhIARN2A1j
pESzqOGmW1kEkI/PG6TyokDnKmkmFiqjgNb+mnD3Ywr0woMn3S8Po0DG5sXZ
oFsU6L/7urMdl6KBMtPN8TYFCpTzqR3F+/ZowHIs0CVhhRztkuYcvbgSA7KG
mGytDMhR1Q/+TlM33oLvMp4O9CfJ0Hny781Py5IAwyfeBS0KMlQ1rshwlDsZ
GEWfcXi5TorSXOrzvuufDBQlHzIWNpCicRT94J9RCjC3e6Fg/IgU1WgM2Swn
TwMv6UM1e8pJUIWtF9zag+/BRKvkK950ErSOJXDIjTUdJEZ8sbIIJkG9uBJ1
tfXSQR/zQHaROQk6039gw9KVDm72jXgVEZOgLLm4Df6+DBARzGp4Ro0Y7SRb
V1EjygLEmg8Ec6WJUcB8Mc34WhaQfMhXeIyDGBW39BpWis4CHc/vvWtYJEIN
is40eotlgzd6LccSgojQmSXpFj3LHNBuvyXgHHUE4fO5U1a7HwH9b+Hau777
cPBu79yMayFI++LRrWGwD1n8jXFodiEQz9P1FRLZh9cdVcoEhgsBhcTUIPp9
Dx7ay1R7KhcBhhpFrRTmPcgeLnA/n+4LKKFQmHJL2YWHP0e71JqKAWkilz2N
4y5c288gFiIqAbnDQbeTVXZhHuW/2JQLJaCLfdu6eW4H9lX++PSoqASkVulF
qkjsQMXfDdeSsr6C0pzUsaCKbZiHM198VlgGjlpo9PyCt+HLxFHLuj9lwFpv
eyvEfBtefHNcvfp8OXB5q9DbRrwN5RRS81oay8Hhch6doOYWPNkW9+D2fAWQ
Zl0mE57ZhFPXxccUNKpBiLSCnd/XTai+PL26/64a5LD615MEbUINLRmvV0vV
wBPtlLOV2YQsfDVplaE1wOFB199Rrw1o3XQpg3IcD9Y5Q/w/i/2GQU6om0En
Co5ukgVy7a/DlBnK8z+IaoGPxOP2+o51qJ/4bmjiTC1IHmJa7HBZh49W8g3o
4mvB992cyZWAX7A2M1zm7L06kMLkW6U3uQJ/RlLwF7M3AHnvr/lrISsw3bTi
8y3tBrA2/XpLTGkFfu4SGzQJaAAygamm/u+W4dFaAJ/OTgM47NZv2DVfgs/O
SZNsjjeC/JvJDwcoFmHmaaI0h9JmwKar6HOEX4B2V9WK4jaagRplTtKg2wJM
mFMy3DrdAmY2OI1il+ehGJW2n25OCzAL4FK5OvoDfoj+vHsj+RuQpOqgFB6d
hTZjJCNfw1rBsyDBRf6UWfhRQxk8aW8FIf2SEY1Ws7Bw5aKXKl0bOH9ST4Jo
eQY2Wf5ZOvemDTw8kw5Pkc/AV71CN6gD2sFpYkV6JqMp+Pns8GU2306QeWpC
YlFwCibN2uWH1nYCDpUeheT5Scgud6WNlKgLfGQQWvA+NQlPMNfLv8J1YfWK
KFXs4zhMy9XoeVTVBcy4im77LI7AgbDbeiUl3UCuzF6qMGYEdsqqJzT1doOY
6Ps6HSojUGXBwL1noxsI3A2q70oZhpZJBvb9Mj3AlBqkZdgMwVWql7Qv83pA
fMVbCmW2AXiX4rgfY3oviGreU1Ho6odfbqh1RKK9oLxXnfTvm34YiPK8pprs
BZVWtrWNJP3wcyxytoerD8jfWdY33uuFL+VupHfG9IFCb122Bww98Jffci7w
6wdv392R6Tdrh1O32cjjjAbBj7HdsTPE7ZDZ1EFBx2kQ0Lx/5eGV1QbFBCmI
90IGgdrXjwXTm62wJzZ0lb9uECyPuKa4v/sOLZiZab9IDAFO2jGBHfoWuPKx
qLR+bwioN9XTlobWwz+LlcxHYSNgv+N69JBmPXzf6syXkD0CRBn313Np6uHF
Q7EyAXQEeBx/91HvTR10HyQT218fAf3lWrHhkbVQSEp6ol13FIiThjI0eUJY
J71MPMo4Bt6ojiTcYayA5eGn5NlejANPi2+hM7nl8PW4UdaJ2HGwZM/nG321
HLKwccWS5WNx+4Z//l5l8NmDUxERY+OAwsw10oKsFIZq27x7eWECtNWdu+Or
UgxJ1s4qp/2eAArHyxx3Vr/ArKQ35sxUkwDH8ITRLfELvHZaN8uOZxI0NbZb
BOwWwVyxxtvfNDDP3Kb8UlsIm66UKuumT4LqtUhtK6J8SL39I0deeApc/HHr
p557HnzCn9f1TmYKdMlWZzBufILZ9OYOvy9MAY6PJQvDSx/hSmL3spv2FKBS
WS4Cv3PgA+vp0Sm3KTDXnqwyrvUBgk7fOM6mKVCoGvCv1TgF9oS+H/plNA3K
99JPHJUlw72vDYxEltNg6Hw87vWJZIgr/xRIajcNHI/+vvaYTYSlImTCc27T
wJ30tJ5j1DtYtpZnRvsWi3N/P8VgHAs/a86rrfRMA0Vr3bATIzGQhDfwo9QI
Fjf7KCpqEQM5GdVXrKanwU7RbJ7So2hIXtq5lf4LO56PZ3RpaiQU2Fx+9Zp2
BkS8aR5ugSGQS3A2sAOZAesx4l9Gj4KhP02UgpLaDCC6Y6ZqeTkYKgfmPkjQ
mgEyp09sJfQFwUDd67oypjMgjb64c4InAFqXqQRVOGHtFRe6iTV9oFFZgpby
e6x/UvYnx/He0ETBmaorawbYqby7wCTvDR+s3dvTz5sB8WC77Z2oF9TJfON2
tgxrj1wWFr3rCdPYTa7rtM2AQm6ln0shT2FVtXHuz03s+Lnqo/RtLvBbdob2
650ZgPRHHvvO6ALD7kPX4wfY+fILmfZkOsFZsm1FWopZwEcqluZF6gg13LzF
9dlngeXTgc9vW+3hfQlJFz+uWYC+F+hwin8Muzy6BbJ5ZwFRVnWit8ZDOMT5
8329yCyY8jti6aS7ByVtPrUbn5sFadX/aIyZ7sJIVuQHlxKWL1MceJHrDvTw
SlHvxmHxiLraTFUbyHtzeZ5FFYtfp4xNmr4NXT/6yv6+OQu8ihMipDb1oYyD
RBr7Y+z4FINK899vwjmnL6KHDljcK8ylJV8Pzt8o6xlwwuJ3SivFYnRge4eQ
j4U71t9qtFlw5TUY0vqYudkHy5eyu2vJpA65ouztcP6zANnhyaB/pgq5kmY6
swOw9v78VxW8L8NUvyctOiFY+ziqMxa1F6FxXonkXgzWnkhB5J7PBbi5HdxL
8hZzuvcfZWtFOMQQ5bkfj+UPZn5ZfC4PZV+OdTQmYfHzlOSUX87AWXj8aWwK
Fl/eWQsgk4VXc+6xG6Vhbq+3jFyXgJ/TKjUKMzCLGFzIlRaDi7dphtU+YN6R
jixNEYaWokwW3VlYf8spCvPkAvDCb0O1ylwsbmeuqbbFC4VzkdwTnzBnc8Sf
kD0JKcZlDx7kYQ7K4VeMOg4ZFXdcZwswX3lYqvaUBTZ+sKE9VYh5vpKXWI8R
5rveZtQrwpyj0XtKjwYa+bZ5O37BbG1lbjRDDlX0Eq1eFmMWPj+xv0sMs0+0
5XuUYF5/Z7zKd4CPqrW/Y/cV8+L9SyunN/AF/W+PMZVhjuFTYR9dxhu9C6Fq
JXjRpH/72xze5lfnnaflmC2FjESZJvC/tFFxxgrC+Ii8yTPfhw9fbTWMJzjN
L0QsvRUPSh1/MlUS2gOhTxy1eGP9izPuBHcd+115vRivJ92GdBGM5uqFUWbg
Cx+1k7FXEUxkfYcnDK+5vi+lRTBRS0PrFQf8KXORaqf/rHhu4qw8/s5xsc8B
/xk5KTc+q7x7YY0i5D8nsdNXG+AiPjvVv/rP98JLabxwjqx1c9YEI4hp5bV4
XNf3vw/O/ufd2KLzn3DKmzjDv4Tz0QlLwhVX4AIe92Tl/GfSZrGSRpzy0L7Z
NYK9lP593ezCSUVwPBsmXG/hr9a7h0O4D5/D94wJTuLpcUidxo3Qj801E+7X
1L3ltf0F3G/lgLPC/9n8NEvlL9xKqPiaM+H+TgWfTPX8g/tE7sBYVIqZSSD0
8dourvwOfcI44fnkcYr28xOBMaGOsN2S/57Hx6YmUlDpHLRGRnBLkFnOGiW4
IitSeUR4/p65zzjS6QDFZsrGT8L4SFbDjf5hArqHf+PrCeNn4e1DIkl28M2h
Qu4qYXytN4TsNnMC5fqX4quE8XerO1Ub8oA7CpPRfoTx2auSVbh4CtAED9Z7
52AOlOe68FIaCMWN1n59jzme7Ly4hyzIXVNxHU7Fxvsiu2i1oRzoD/uQu5KM
eUiQ77vjOWA8VhMz/Q6br7V55yKzEVBPRl1MHonFRYomN1kuAa7lutgPYZhb
nebdoy6DkD+Q8iw2n72IP9lwd6mCjYdt6QKE+a731+eSwQ3AVxqyq+iJGdX5
IyCsA5hVW+ICnmH5X15w6krqAvUihq1mV2w9vOiik2ByE+gkdB1wP8Hynexf
XcAZg4sciA/vHSz/mYX2s1gTsBEff3/fCnPeurjCrilYv6Er1GqBXZ9mZTXr
gjlIqbITxBlj699GM/JQ1hqUcBqGPtfA1iOzleNKLDbAV/e1zTy2HvK9CeBX
+GcDGAM0BK9cxtbX95HsQlN3AN2h15N+bD1N2y+sk6R8ABjtayK0JWdBYQ/l
B5G1JyDmGFN5Jg12vud2Ov+mOAHqYvGvMtj6ruPAya2j7wxSW8q6C4ix/vCP
OAfbXEAQ2bybN1YfpjLe/9vYdgMCxfwzXj+welSrsyyh/Ao0V2qmLFdjFhk5
WOHxAl/aEZtErP7E0yBNFOleYLw/MED5ywzwaicVyyj0Bk2MPkfG2TOg5YJw
q+26L3hl5SG2GjEDdJz+ROoSB4EDIsqHYVZYfRr6y/kJDQIf7n68OY3VRx2/
x0LTvm+ApoNCpKD+DED1iScZ2EKAC2usoKcqVq+eiH7KeRAO8kL1rR3FseNX
Go9bOkQDGB7C5ozVa9FTx8di16OB+OtNu44F7P3h3t8IVpcYQCpa4ck5NQ3U
BbRpKH1igeNnE3L/Liw+5ZR6v/ItmL+Xa5dZOA2mGFqLw9KTsLrqy3TMfhob
L82lQDMZmAeb7764Mw1kiAssUraTAXWHA/eIGfa+IMF59NIgFbwbdj13V3Ma
XDG7Z3KF8z3glrV/2yEyDeRFe9IncZmg2lL45sL4FFD/trnXWPYJRK3+yXgK
sPefIJI6C6U88Gpllefa2SlgJiVOXYLmAZJHCo8ZJaaAY8+lU5ld+YAmmiTH
hW0K5DjS36UgLQQbBzKnrw5PgpKzphdN7nwBNEGnaMSkJsEb90klstIvgFaO
hEuOfRJYVJB1faYsBuIBF45OEU+CtFt8tCwFxeCfPmtEZd8EqD7Mc79K+RX8
41Y4qH4+Afqm7YiiV8tASlNgpmjdOEjoePH2kXY5UEv9eD334zgoN5Vkc/hS
DqoMx+lYosfBlSufxnc9KkAMxwXxJJtxQPfv3sJT7irwOMBBJpZ0HMy5O2+m
JOHBq8Rzb6TAGLgRdabtrG49WJu8b/r2wwg4tnzPbD2qHsSLrvDQh46AqbH3
/qb99cCf/nmyo8sISHMYuHHFrAFIV0hzE18eAcnRf1KSnRoBw/bIK43JYZA+
q8+5W9cMrMiuK0SxDgPX7Lpj3kwtoGB1eGb13xDo+M291W/RAuSu+hcpTg8B
g6d/U9cOsDgHDXtS/hDYWyJxZFP9Dtafj+OTrg4B5QD7ntNE7cC+67lFEva9
QNc9vxV0qx18GCsG29j3hNDB+5MDZe1gtIZxDVEeBA1fqyM1nTuAxcEnsVzK
QTAzYdi7uYV9Z4X/etaSOAAM96xjbsR1g30KlPZ2bT9IPCNKIX+hHxT5HrNY
J+kDEjknKYVe9YNjiIXu5blesHNrQ22ioR8M8OedftPYC87K2IoW6w2AgsOD
ij8BvUC8fUhdwn0QMLlk/7lC14utV+OXolaGweXqe/zsx3rAaMGLrbNgBHAd
mH5q2+wGnofSVq1RI4DlYEnVo68bfPhHHzhwcRQI5H7SaIztBt+ZyOerk8YA
+lUe4eDoBm89uS6rh00CcbJzYvwnuwC3/Kjurd+TQCrDcOjCbic4RrbY2CQ+
Bfx6+qblKztBI52eSX7EFMg64X7+zMVOYHlM19zJZhqkfidNc0E6QJ592Nsj
oVlwXrfa8KpmG+CTjqbix9bFg6OzQxvY96wO/3O6+STCOrRKX97RCqbeMmZa
sM0BWxMK7gi9VsCRTX5SgPkHWKAu+/Hh1nfwK1X3hpfwAlgLe1C56dIC/uwT
Qf97C6AgRblg6WILsLjHMMWXuwCgfSUjI3kLYPPgrWc/vQheZxVrzcc2g/Vb
rqeIwU+gL60m8K+iCZyM5yq64bkMQiI5xxnosXFVg3PybFoG7TGnR2OGGkDB
vEX3WeYVkBviec8yswHcPi58UzVnBfxuDs1tv9gAmDm0+kvHVsEis0G10JN6
cDRZfLzo9DqQ4MTnDC7WAp/wf8tNRuuA7M+TRI2KWqAQ/yaf1Xsd3PM5I338
TS0QDVQKvdm3Dqwl1G6WSNYCp18Dh7gXv8Hv8fksKVcUnHzQuVw/uAHyh4Nz
9+TxoHfcU6GddBNsTx2IWkzXgNMLpK570pvg4nHuxRdhNeB+acKv2sBN8P3B
JY+tpWqwnOTU06f0B3SsKKJ1eVWgsMOXgzp7C8zsUgX636wAzKmf+bOHtkBu
1qO0DPIKoHmyO8GUZhvI/RPzfFteDuTs27z3H28DzqtOfnt85YCTPG2GUuEv
uBChUx22VwrIza/YnW7ZAZzGTauBAyUg9mz9VNi/HcAl/VDvZmwJOLPATrMh
uQuy9M2vjuiXgDEO/sjqyF3Qd7rZl22gGMivNaSo3/oHfmhI+bFOfwEU35kY
vVb3wI6te6EvexGgPKjbSefdBwKOSrvnpgvBxKZscJXuPngsZ84S/KkQnCWb
YG79ug9krFUfU1wqBKOiI1Z6Lw7A0A/JDdxKAXhu467qR30EJP5MCuZufALE
ATLGcdTEyGV2PfAXzQJxp8TwLPzEyJ3iILId1yyg2OTP6atIjBiVoz++SWWB
5bwafnAPyz/6aDqY/AEIyx3z4msgRtoEtZ4ZBWQCed+38g89SBC1Xlfffy/S
gcfNwHm2KBLkza0W6gOQDtQtZn1KckiQiU3btnySdDD5PYe6sZ8EYbyjY8Ty
5j3oZfPXUpQmRcqnyC4Wp6Vh7ysU7TqTpAgHp6hc+GAyOLn48wPDFiliOnZd
86NDMni2+aq9moYM4aE10FyiSgajQhfyfp4lQ6pv/KprwyWB4sv6Ur7BZEiP
yVeRlrIEYMXozJ0uR47wnIgf4hl7C1p3DbmJ3CiQFtQo2WwsCpB13lG7EUSB
XBB+FPwlPgpQcIvEhCRSIDeOv/avNYgCd8LBrWFIgVBNpbGQ9USC42vJNF8o
KZG7OJumtZ4IsDxA73szhhIp9KFyIF8KBSz65cf+plEhJalI2GPLAODdXRZ7
uogKWefYW8kgDgC9mrsB+rVUyJiO6NFGxmuQ7kgb/HCaClHUEujrXvYHnc1U
nxv4qJHXhsfCdAP9gCGnaQVHEjUiIOmbZ7vhDTaszpJv+dEg5dW3TxvuPAdV
t1NKGGJokLzM10Fjj59j9YeTnCWDBkFZyVNNfzwD756K6/WjNAgSMPFaYsQd
VAT082jt0SCWORd434+4Av7g271bD2kR49NxYwdnnEFZev7VjGe0iKIIs/Ji
oxMIEr3sfz6AFiHjXzX1M3UCvzSJLvCl0yIr1bumtYFPgG7iVZ7+AVrE0TLm
ecVvB+AybKTYo0SH8NVtqaioPwDaIoMNFOp0iNfIfY/QtPsgfbzc4pQ+HdJi
vnET7tmB5KTnoayP6JC0fHvi0sp7QKTLKbU/gQ5RNx224zO9A971NPN826RD
puTSlKI4rEBhlK/1s0M6ZOcG8G1LtAQDrzKomKnpEWTTX/UZvyW4u3BVf5ub
HkFF6wy57SxAZqjt4FtVeoSI5ZpQ75Ip8BAqVT8djeW3PrD516gPWF32Fr4m
0iNdtixj9Hz6ABUMjhDJpEfWTUNqP724CU7RlEy3lNAjhRy/q80u6wGVQfFG
kn56ZCr05vvxNW1Q7Zjeo8XMgOgYysvGbKgBz2u0i04cDIjM9Q5xbQY1sHzw
KNWblwEpfEG01C+tCvTtK8ZuSTEgTFoHwdu+V4D+XsNvEnUGZL3Bg93QXgW4
87A1sD1jQBDfP3PBLorAm8rOqvclA2I5fTLsh945IGLlpvnMjwEhOhT+ZnlB
AWzKUWx6hTMgaTmksfyC8mCwx5vpVSZm3k7leAsZMP1wJNo/lwHxashXjCaV
BnBeFXlagLXPMAnuNZECB9PLpEzlWJzmwWy1vDiweOjRfOY75tRdrZ+JgmC1
kkzQp4MBQfe98teMT4E0qs9vKnuw9qjBgMspAfBXwdBufgTLt8U3F0BewOyT
SyG+hMVbXiiEjrKDs2KOBrWrWPu2iMtXudmAi4RojMpvLJ9jZ/DmU1YA2tH+
/b9YvtpOs8BdZgCrOU9akDEiXj/iP+e6UIG9b3/tTlNiRqPL59UoAMmHSddF
asz6wrznlMnAiXus7ScYMQcYJFYHEYEaCxnmSGZGhGh/QSm85gA3r7lFv3EM
8w+97FMZ/3ATOuNiTzgwl29GC3Js4fRXLK6Gc2IOKE9GMjZw5m9UWd6exDz5
+/gFq3Uc0avvFTZ8mL9PJuuOLOI+ixhEigpgrsh0ev/4B27MQ4B18BTmOYcK
V4MZ3NdpEbbfwpgFks9TnhrBkVlNRJmJYuZgdNKs7MdxPOz7WiSGmeffgytD
3bgP2tsv1sUJ55uXj19sw7k9vLTEIYmZqrWKla4ZRy/+bVdcCvNiIud96joc
HWX+J+HTmGVYTpxLrcLlhAsc0UpjvnhYwplYguuwcdwcIVgx65tfSz7O4tyv
gGgZzERk7CuFmbiTvdTVZ2Ux6xioHBkk4iqOK4fXEiwj/+TzXATO8w878bkz
mB3LqhEaX9wJTyXmOIK9Bp7gKp1wIt2mcIJgoso3/3zNcbkySrTMcgQrc5eb
43AP14v/SP5neZnf+yQ45VcFHmf+M5H0cnpZDfsd4TT+/7xQJPtAGM9/Wcz6
H6E/5GaQ+zUdfFrvQG01wegR5ZqPHb72pyW0I5gvMtHTxgN/9QntrUPC+RKN
2hS0B+HF7SVjXxDcpYaS18fiqfcl7OcJ12u8y8ixl4YP0PKbVyRYXYoukiwX
H/ip9tCFcH88WWok3hfhrV18yhII97OQMePRfhm+hdON+SPhfrdcj7lSCvHD
gtb0GYTnEbH/3c29Ad8uzpHnL4E5JPa64cI3vOxEZD8l4Xn2lQhxwl58KI2J
dbYIZqetBOW5Qbyf1EasDGE8dGTyPo4Zw5f13ds+IoyfRmUP/rFZvL7EkJAq
P2b5YzVveBbwyIlLxK68mMWRa1llS3jDoPXaKC7Mjyxro1/9xnuuG398dQLz
MtN11tFN/EExyVVDdsy2eY+CHmzj6UZE4lEWzDFtPL+l9vFJQWTLQVSY31LI
xqmQQ5aPhrYB5JiVv4g0hFDCy/mdhQ9ICOPTs7WdiAY+4+DvnNnD5mPZrN+R
HSMMc2V9/g6bv8g5vjgrGTZYI1E/1/gTm89d6ueH6TggSrp+cegHNp8R3xBt
Uk741LO+oWAcc1QiKbkKD9SvzE071Ya1D/dwTKYWhNL+W3OvmjGHNZFn3xeC
BzEXztXVYS4xEPUaFoYJiTXsu4T1aOHsAu2SGGSHutdlsPWMbz/nL+6RDHxJ
pLbe8hRb36RdoBf3eSg7g7cJdMDiq8ZbjlYXYNG1m4qn72NxsfFi0UIlmDc/
eVLKDOtvtkDqoz0OpiMc3jsItl5b3IgOvXAJBltmOLSSYw5XG/1gdw1WXbv2
d/OAHrHMDiz781ADrt1b0CDdxurHRT4VIVdNiNT9ch74QY/wtfEohaZqwbnT
DzK0G7B8kc/csYK6cHTgmkuMJ1Yv1osTSl4bQsqo7f0OZ8xlXhK3FY0g0587
pH8eYO1ndvClq0aQKMwy68AYqydUsTtxNibwgdFZFiZ5eoTJcOLMlRdm8Ocq
2ynFeTokYuSR1Fi5Fey0pablGaNDChPY9xNkreHss4DltW46xJG9pf11njV8
/Y25TLeGDukqnJzfy7GBOA1N65PRWP6VWP1/1XfgRnd4SPsFOkRmuKdK1/AB
TOl+t3tXmg4xLjp0D//zAB5EkCwtn6JDOCIPGIxiH0KBvIZn5XR0SPzuL5Kk
iUew48JpU/NxWoQvTjE8J8IB+jGKPpt4TotcOen8WaDaCX4R5WYgy6ZB5Ld6
BPJqn0HaJM7Drbc0SMRGYoWKxnPYdXXCpDuQBtlvp5Dr6XsO+TW3Qq48oEH6
usjztn95QDua6w48kjSIuuvsz17cSzjOa9Sb94kauZt1yfHde28otr6Gu5hI
jcRIsvdPbXtDPgtSotI31IjoMFqnpeUD6yq+QLv71Eh6712KjAMfSG0yNtcm
RI3oX188F/jID94tm/FNTqBCphi35qr8A6Bzc/Db4UAqxFNCdzp/LQAuR3Yf
ELlRIe6euzWbxoHwvbgCGctNKqRavL4sQDYIHtclasXRUCHyVTU/xTffwBBL
a64eF0okflRlU6sqDDY58l6/pUSB8OQKntOqjobIS7UdbxEKxD3icw0pVQyk
fPJ6PO4YBRJ/X5g+Xj8G6omnJQcvkyOX2IrzrddjYNxAEGlGAjlS6bXKgj8T
B+/f1tZJ2CJDYtATVG/n4mGkm19Q/hQZgldlpVYG76Bb5Lp8YSsZssYQPT2f
8A5mRUgr+L0nQ1i0smt1DBJgWRz/ufvXyRCLoYLFbwOJsP/VqcALqaTIdpFC
wyBDKjwQ0uXXDiJFCvzfazN6pMIqPvsYfWdSxPNIYvbZYips7ZF/eEaNFOFJ
GS17bpMGsyPTUi+ukSBkrr5/nK69h1UGYo/Tz5MgCsgHjyX5DPjqTVacXxMR
8m+4WYAmPhsm/mB45VNIhDxJ4zMcnsyGK1Fhaa4JREjRpNDoPdEceD4ohO2S
PRHS0mKg3lqVA380aHy6f5wIuXOFXHhxORcq3PoHzzccghQBEOjsnAd5Fx8k
8r49BDe4Wv0vteRB232Ose37h+DvK7OILe58qD8rTOPBeAim4fgkc1s+3FaT
JfphcgCCvvRceSj3GVZbdHqnrOwBtpGia884iuADq02VNvweWBLzvpSiUQRP
V8U924jYAwJLwVkaL4pg+uasq/jZPaDR4WUA5oogXflxN+MX/8CaRDQLWv4F
MkU4eCvQ7wLrCatnFi9KYBFHnb/c5A5YqXv1MbO8BL4jMlGSK9oBy20DvwP/
lMCE1INOZYMdwDFJj5O1/wp5bR354pL/Yt+P5rrC90vhX+3PyHGZbWD+moWu
5mU5DJ96VN92uAU+0IeuPvheDl2pXlyLb98C8QU3I36yVcCQKLIMx4dboIZh
D5p/qYDsrLae13P+AKqyJl/cZiV0L533WRPZBFNGC01+yTXQyO+NVejOBnhD
Jvr2/XYNbGLmkzT6tgGUQv/eiNfBw349qdgnDzfA16pcNRZKCF/vxrOvFP0G
PXWF9awAhaXcFgVXrq0Deb7pP6Tfa+H1mjM0V7nXgQbnqxXpg1r4NquEi3H2
FxAN7XgMZepgvSCXQeHZX0BWNCuc7F0d5FXUN4qeXgVNdnplZPb1kJVrH1YY
LAOblEPSZNFGaMPSuURDuQzImGOUbls1wszFNiWiiiVQXWaj9TihEf4St+cY
41kCcek+dXfom6BUyewnl41FgGP4xxez3QTdmUOGSyvmgd8Kfle5rwW+oZxv
F3k+D67p7nj00n2DUcHDdaeV5kFzcsRsxNVv8BqzY/sB/gfQIb17/UXZN1hE
M0z3tn0OTDWcDd9I+g7pJArrEYpZUHBqr5D2cRv0uaxeMNo5A17V8pk4ZrdB
qmjUkDRhBjyRbtaen26DjxU85bakZ8D1GSBJbNQOz3zvWlSzngbFA1YbXSod
8FR58okXcBLoCwd32tN1wTbPlzOGNpOAz5Ajbl6sC5oXxciIUk2CM1IeNyzU
uqBhozVjjv4E6BAcbdL06YI6q1J3RnfGgNweaT3LThc8BWs+kz0aASbTNIo7
M90w3nmry3m1HxzT5rvaWtyLrcdLkhz5/aBRbt10r7MX3qa4f/Lu435A7PvD
nn+lF7b/FrX4+6sPDN8Krb0h2AeTjJ0FavZ7gaKFXJpoTB+8RLQnqC/XA6xH
fq0UPumH5RFjB3C/G5j7nEoXD+2HPMNnTSubusGb4MjXb3P6Ya9+Y5C+WTeI
6eBS1ZjshwrerZpboV1AeaMjg/H6ACxTtpM3PtYB5E69WtsTGIQ55Swu2aXt
4IsvkXi88iBM2Iy4vWDaDti+zHsKGQ9Cq3VVU+msNnAYdPMPS+ggvHpBODhJ
rRWcX2BlUtgehEQXB8iXi1sAX4GiuX/jELSQTVRoO9UALir3cyYajUC+GPfK
G6P1IJTK+zjOaQTeH80pSY2uB74PZ+ZbQ0agUWFqeSZFPXjVzJOZXTsC5cXI
EJLtWuAVNFdoJj4K2USD5UrXIfhln7CX9XcUGlbJG3xxg0DntfmDZaYxeLFJ
vpqBCIKK4194T4iPQY3Y6p4RVjxIs9w4kjYbg0TMudU2N6rBP116umtwDCI7
uyyuh+UgWqb2Mav3OFRYEUrcelcO6NqbX8/Ej0N3mxMNGQrloDDf7kV84TiM
sjT65uVcBtqqPPKrJsehodXQsd//vgLu+eONYxcnYMuQfocFrhhIsM0Fu21M
QATUOk/T5QMiCoBTEZqCbdL8r/FheeCGXPL36dNTMEfU202IJQ+0uMijropT
8M9H+XZf7k+AnkHk2wvNKajjx5csopoLdtqLfY4cp6D7ZdF5zbEPwM3u29nW
iim43imZeO3pB0CVUzpfUDcF408MP0ll/ACcUs6Gvm6dgkhzzKyaeib4fVM2
lXl8CqKcOklK39KBnD8Ne9zRFDTz5ty9SJkGUhwqnPQuTUOZ9Ii9PrtU0NeQ
qu2kMQ3ds5saAxpTgGG+Spm/HhYf3Kua9E8GVL7K9AHW0xBJlO9r4U8E3mGV
pza9pyGT0h0Ltro4kGtyMe4hfhqmnd5qCCUPB9ETXKYlUjNQZ4pf1koyDOz3
lmU0ys/ANIOF4utGoYDNzdi+WWkGohSPRUBFMGjjufEo6doM5OPcmDHNCwR+
lakGwbYzsPzsevDUVV/QXeJo6fZ2BlJVSEgz5vqA1M8QDU3G+pd9rJ3D6APc
3SlBTMYMjPB5Lr8+7wWeUBa9fPJ5Bnp1IKx2z14AfdH5x4+asHz9vxGnd56C
yppio9u/Z7DxYByjIPAU9B1aUz/dnoEyXkTv23VdwG1Le7/ne5ifnCozqXUC
pl7P6/XJZyGacT31NXQA6r1jM1c5ZiEfrkXzvJ09OF7sbjZ8chZ65S1EdXE+
Bvf1q5+b8WNxtbLrLMkPQCsZSYys+Cy0nGdOzme+CzLvGjSwKWFOLArRJr8D
MiuiVoUB1v6uo1UGsS2IsIlLEL48i42n5yLfjlmDNsosxz8as5DIKHdqWM4c
XG648uGbCeYsdqaCE3qgzmBa2MgF8/V4XjpKXaAX68Mu4YaZlDic/kgbaDA/
fLb+DOufvdi5kf86mPjaHqD9CrPNuIql+VWwqvUhwiKIcPwXL0fGLoN8879t
NcFYe/2CkX77S8Aw58p9hjAsvppPshYBwLm3LJW+UZirLkvvvlEA3EpbgfgE
LJ/BJEQmXh4cUF2NzEnC4mYzX+nrz4BpXr1l3xQsTvXjMt/YaXC3wD6MIR1z
wb+MuiEJkH7ep68mA/PcoYYltRg4eeHWXYsPmNX4p1WOTgHW0NV7zjmY112o
p1F+wFBL37+Qi9khssnGgheYy9YGan3CTOd/S/U4B6D5eg6u5GPe03O8vMgK
+qsagPBnzGF14CQFC/D86U6iW4hZMMUXFaEBbtzOGs+/YPZJ/cGxSw60bebb
3Ysxu56Nl7xMAvZ0R8PtSjDrvMe9PDjAPUgOCL/2FTOZeJvYtR2c7gOpNq5S
zF19t+dNN3F3tLmuThJcbivspb6GyzPM240uw4x8/xkotYC7faj283w5ZjPq
ATL1aRz1Betj3QRPGRqKbg/hLjh7uJlUYLa70vDlZjfu3Ru+470Ep802z443
4ayHlpaVKzGjv3JaFKtxGlJee+8ItvRd4cB/xv3qibq8QDDRPr09byrucsh0
vVAVZi+bgXO2gTjZuHOeBgQT+ciOtNnhGrMfPXL9z+rcy5+lcIkbtjGB/3lq
I79wsaZagPlP8H8+T83QcBPPd9s+2Ou//ijTnMU98YbXXpve/S8+3f6ZKhZf
eWBvpUwwsjEVYJeNFzmmmUZOMB9zccLRVzyacI0dEs4vTb7+iX8dvpI3q+n+
f9fDkft4og0/lZVTQP7f+WcksoB+PK7gQ2cU4fojRFKIV8bxrpKHYswEU+37
TRjN4QUjePFehPuX4y9IPLOEV4G+IdOE++3UPp5p/Bt/ia0oVo7gMadjDtf2
8Ea7eNNPhOdXWD+vlk0Ea8YDfPsJz9e1ujP1GBmMumTu+Zvw/OfnuVau0MH9
7yenD4swP/rYWRfMBN1VE2+sE8bPKTn/+HPHIPrrRngvYXyxmJsG2Z6ARHX7
oQ6E8dd7lc9j5SRcYl7QEs3D5oP6mQRdaz7oMTI/1/MRi7f84PhQIQhDRf2T
DrIJ4/mBHkmsNFQN172Z+x4zzsZt1VYWnlHJW1lPJfSfMXeVUw4+Q0juiRPm
ExrMfnpYAR4bfEjmnECYnzt69CiAmlxX6G9h8xNhOdQhF1KBKzyKw7IRWL40
Fe3680vQ9sJ81L9QLD9MiFft1lXY45k9YIXNf4ROK072nya06PraF4CtD+gk
Y1ljjxacXRa4vOZJGI9kbxqgNrw8Mlag+hxb35KG1K1XdGGMzMDrdmz9QU4I
/Y0OMoRMbh/d5O5j7eFfga/tRhB/cY9B/C52vB3PK13cJjDIcvcriw3W3/Kq
79DMLdiaTKxcaYb1l36m9jypFWSj++ZmrT0Lp3TWuW8OWcEiCnzfT02svXbE
xo0Sa+jtF2Boo46tn3qqvVbettCwZ79XUgXzQ/EQAWc7yDQUR8V5Buuf0SHp
1oIjDL1uT2/JjJ2fRp7NjZQnMMtwMi6PbhZ2lbb42Jo6wQe8MQw/KTF/8QpT
m3GGaikdI7KHM9BR+rcruZwbXHsxf490aQYbTz/13H++hBYcXuEf8Vg9QSqe
wb1XcIOdW3GnHKs3uCX2M2+8YJTEZ26F4hlofFiUGJznDfEvDL/6ZM/AnNYf
ytIn/CADcrXodjhW7xKJuFQTg2CCOJiQMsPqoa2oupjZG9hP/mzf2wCrl9eK
R6b5guFtqvCSphvY8dJcHx5+DYFn6h7SCqhg9dHX0YSWKgIqWKZT8AvNwKGt
VQ18UzT0p8X/ubo0DYkUkpRIj5Igz29fe7P707Aww9vENSkZ7j9ivGJjhdXv
IdnxcxdToIoou4u5yTRsmZ1krfJJhaaUyIHENaz+F2SFSLC9h8S2XvfPiGL5
Ase/6u9lQGVuFZel2Sko+MM8oNE8Ez6j3iMXH52CXptFcUG1mXAg9JeZec8U
DAx04GIP/QA55FxdU1HMXy9XJMhnQwulJ9xRSVOQzPYv76/mj/AJh4TfOT2s
PRMXxyHyCS7RbdaWqk9BIuOgz5FVn6CEeYWiOMDel6bF/tz8mgcT0u//WpXA
8hMsltKrCuBhzT3Dn2RTkO2j9er54CLoV2nz/vH9Sahq4dPnGF4KyWKVKL+x
T8DAqKBt6V+lMMdnFOUlmoAjH+ZXOHXK4KOGpDPmi+MwayGo8NXxcri2aPA2
pHwcGl+Rm+gvqIAiLlPD0GgcpmuwGpjx1EChTQrNkMgxWBcm4ACiaqCAI5G0
ifsYzJpqGn5FiYd5E2kXGW6PQfuiJ7eEt/Hw3dLPs7KSY5CE4aW2ghMKP1z/
rGPeOAptlb/00vnVQYs9H1nbzRHIqCSxX/etDr6iHLwDh0ZgmqXwwVWmejin
F3iLDD8CI92OH1Sm1sPw4Pd/NQNH4OZD4+bklga4nND3t49rBDo9uc+jdqUZ
2i59Z13ADcPhMAXewz9tUExutmX26SAEf0p9ZLHvIupbk37nTQbhRMx2pUdl
O5zszMx+cXEQcj5VuWzl1wFf25uVdpNg7/uWQpU/WLqgnueKRH7YAMQjRcL0
3d3wgWi4ukFGPxRt1dvOou2BdHwbypn+/TBko1xsUbUHNk1EKc/d64dOseLJ
drAHGiq/5FeU7IfdL6osE8p74cdNPO/Zkj4oeFM1ILm9H+5BmumS2l7YM+Fo
lHNsAF53pyA7ndELr3Y5nXthOgC9GGt7Ev16YaThhcawpQEoqWEcaqjWCxt6
5KZiWYegj+pmqE5bD7RbiZmyjxqBjlLOtcl93fDNS3YbZsEpiIuurUio64SG
5dcGRrFxRulA9UUzsBMuOn60OOUzBTMtmpuPtDrhuapL9KdnpiD7FX3Zp8Md
MELAqks7B5sHDhqPi9bbYQ/TtcEsrVm4yHO6wJa/Dfq1un+q8ZuFPsSO7s0L
rXCq9Ae9VfUsPFd50xoUtEJixMBZR2oOXsxSb3NWaoWdqRmGc8d/wNxLZT6s
Rt8hBU0EtQ7JAlSM9bvjENMCZ5KNFp9cWoAVGz+ffjNrgcQeVkvCvgvwAK25
oS3UAjPTrzFrUCxC+YJDy7nSZthd8Pe6w7Gf8MljYkOLsSa4fjsX36G+DCNY
Os5PyzbCMXFN3+3IZWiaMRLz6aABsqJuN3NGl+HbsHi9im8NULdlUv+D4wqs
SY23zrRugNtVI18n01ah22Nts/G39dBUkVLZg24dOtplCfxgqoO3w17cdlFc
hz+eDZ99MV4Lj9GkM3+2XYddLwY6n32shZo6J2tna9bh29bkhMyrtZDtbI/s
Keff8AIvl/iwFwqXeqKDvyxsQM6kFuFkNjz88Yc0l4N9Ex7j2h+iq6mBTi/Z
xnJUN+GzHmN1I9saeFiq7KSStQk9bGhiPb9WQ9Es8+ti9/7AK4IX75BZV8Gp
mcHvIWtbUL9CzDZ6thz2+qnWzPJuQ4G3Zz97vS2HbO9/zmnpbkP0bF087no5
VJj3LDcs2YbVPenHRcrLYJV83iq7x1/oTlzk6PuuFC6XjIUa0ezCu4KzcXTe
JfDUm6AQ/Yu7UMaYIlxHpQQ279/b0LPfhWSuaTWaJCWQ/+VdDZ2eXdhyTyvQ
8nUxfNHrUiWf8A/SyFgudMV9gexGbBwbovtQsRR5LjdYCA0L1iUNjfZhi8dv
0ugPhVC1rru+0H8fLhafpHnmUggZbZaeqs3swxGPj209xwohnfttv9WEAxjv
J/JbvKgAnrXc2augPoIXfnORqW58ghU0W5Xa547g3O+gg9cpnyBIc5Lotz2C
z1I/+OZqfoKvWNtq8uERXI+NUArK+QgFE8akVC8QoUM9WdQOj3IhYCW3MF8l
QuvZnte0cGZD5bXAtihSYjRLC6kg78uCl/XcPtecIEaBc1LAUWgWpBaM0Nu8
SoyebVKz4ifLgrLln/JHkolRfs9/cz92MuHqqPgDL00SVCnroVcTSQYU0RDe
c04mRRW0i/Si2VMhA8+j9coiUhS5uVd6piQF6n5MLv/TSIrOCVZs9emmQJck
YldkjRTVF3KZYY9IhtwS8skKODK0Sdrtnh5HEkwkYtwMHSVDb7xesA82eAfn
5MqFnWkpUPur7O2MLjHwkDemd4ObAs0qS54olIyBB1zjOBsZCjSp62Ug83w0
vDXedpzNgAItuezRR3MrGjZqekjVJWPt+yzzCrSi4ItUvyARSUqU6nRguYF+
BLTMr5lpukiFhrxbLfxQEQTv+Rvv59ygQv0kOjdNrgfB6m/2PG6WVCgVH+uY
zVQgrNudVxr0pULXf/uff0QXCElHL/F++EaFJtmGyP1zfg3dT1ZN3delRsme
1T3xfOkLX1XGCZFbU6Nmpc9uiwj5Qg8nKo9gJ2o04XZjx26bD4wbunrSJJoa
nSvej6fh84HWcgZJ273UaHrQ+6OoXi/4y/jeupQuDZrXco2WbcwT3hd8au9s
SYOWaw1q7mh6QiX27+wZDjTo/u34leEaD+jwxv0rGkqDIslPuwKzn8OBGaX3
my00aIn21ufjUe5Q4Pz2O0klWpTI/3gTHeoCOwMcliIZ6FDLN8+MhBseQdXr
O4bSnHRoDhuJTxfPI5iWZmVTLkSH8vnkKzN4PoQjw7TnQi/SoepuQvKSuAeQ
vyy0FblPh6aJ/nXWmLoHIy5eWWrG06FTQV8EV+Js4Ol7m4Jc3+jQeI92U2oO
G6jZaeRs0kuH2lXW1ZslWkPBMRPxtwt0qNdf09bwHCt47LILDxsjPYqmdZSy
VdyGJ386KXOZ0qNECbnvBa6bQJsbtbtcNvToulWR2EG4MYxU9tSifESP6mg1
GsYNGsHsI+uU5BeE/aXHP448MYQFBy28Lan0aKHLq7cB3TehUWJzFsMUPepl
a6a2YHcD1lbnJ35doEeR4dXiWgstOOl4o1qVsL9V8uTvbtPrcLRTxE7kEMun
+Hnpyh0N+DxlvHaakwElIhO9rFqrCkWbUpzP6jCgTBwWusl+CHx65tTIWSMG
NG3YVWPDC0CaTPdETgsGdIrYO5WVHAfj74ezRD5kQL3OmdA1yirBk8OarLL+
WD5jrisDuwL0KXSNuhmM9V/GwaK/Ig8Tmc8pmEZi8RcnJG+3yUHm0NX+Y8kM
KCIYH7P1SRY+4g7tOleM5fOY/VprkoBwba/veTnW/2mXBXcWcTgV2tz1vgbL
b6U31XMUhRHfnd4lNmP5CUQNJlZC8G3y5RnlEczhIY/D6fnglQ/7x9ImMC80
XOhGuaH5883j8zNYf58DmRr8uOAgi8Qz7mWsvz0tzku27PD3JeJr5/8xoOj5
uO6Ih0xwWZ43sOIAa39d+ePDEXp4Wi7IjZuYEfV6/FroPT0t5PF+bBJByYgS
KdW+Dj0gh7p3Va+m0mCOOs4uVEYKJSNE+yLpsfzKnXv3E4hh4F3yTv5jWHzx
eLjn5z38pITaWUjY732yN/GO+Q7+0IlPDuHAfJNo55zeFv7SFbvllZOY07Wt
ZMjW8RP8lO85CPvLl6Rm1VyX8Z2yKXMihP3nTifCz5ks4Fm2Del/E/anw7p4
5ztT+M89UWsfCfvXGwyutpCN4g/P7xmoixL200dNa/ztxy86zat8E8O8FrHK
HteNp2RpKZQi7I+3bNwtzm3Fd+7LvH9K2D9fGG/5/EYj/uGjTub3hP31rGlS
E8Qo3mDdnriQsP8e0VJ6bliGH3DcsU8n7M//cz95zaYQzyvrZOJO2L+/00RT
vfUBr9t9BGX/298vyXw5JxEvqjPzvoNgGaLda8QReD8698MbhN8HIIrxDbXx
wn9outj/hWCkYWk++yFe6f03oX///Z7AY/DURgd/WqD/l+B/v0cQdNrBhg//
/3+v4H9y8fGr
        "]]},
      Annotation[#, "Charting`Private`Tag$14797#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1:eJx10HtI0wEQB/BfQ1lT22pGohm60orAF8FCq2lLKx/lY0tLrKQVjhSVUCvF
+daFRmY+N5/TOQdlmbIsKNBMRjq1FlpztVQ0lU1nkzDUHv5zh4O+cBwfuD/u
jnE1KeI6iSCIs/9qo/8vuR66xoSdRtZmE76bvd3Mzmb2NLOfmcPAiak0VUlP
LHigPybKcpoPDmElyIaTksEHj7FfPHqTAtaaFt6LVLfBBUOdhL17JrjTQDbZ
vsoG08IZc/te54Jn3p6az5jPB8urxhK1S4VgIanrnOWiEDwpqPVOsyvGfS4Y
ZYsO98Bz7DBGR+B9MG9qPX3P81KwkkORzSge4Pyg6BNnsAycszwRHDD8EDzm
8qRP870c/JKxN567WgGmq4I4EWuVuE/OL79lejW4a+pSsoNdDXiIzle57BKB
pUErHupDYrDJk/XR0q0W/MfJSqD1rwNXj2ecr4qqB7cGNCeORjWAvWPa+rXM
RrBG/zmttBvdy/t6XHGkCUzRScntPehirzM/4tgScLzwsc6kQhcqDIYTYc3g
2XeELWkELZ8a9SmPbsH71EV5s+NoQrk6ROVLwRIJ20u2hM7iXuvacrMV/20V
6OO+jvas3jrhmCUDG6zF9Zm/0ZR84+WnwjZwrNrZT0qRg+8oCndMW6PLavST
LlR035XughY6+oA+dKB5N3rBIitS4obOZH5JaAhHV9qfZOk46Pa1NppTJPpb
b8qz+mi0f6jNSh0PbcM/mlebinYNbuJqb6FZ7uT9juno5OUPSrEArc6+QRUX
ofW8EZ3mLtriNLPDoQTN3EbiikrRocY4V00Zmq9W/bSvQOcoDisvVqFFNRuR
+/4FamgnXg==
        "]]},
      Annotation[#, "Charting`Private`Tag$14827#1"]& ]}, {}}},
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Caustics for \\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \
\\(t\\)], \\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\), \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \\(r\\)], \
\\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\\)\"", 
     StringForm[
     "Caustics for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(t\)], \
\(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``", 0.01, 0.4], Editable -> False], TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8882174147302155`*^9, 3.888217421846143*^9}, {
   3.888217529258319*^9, 3.8882175754919677`*^9}, 3.8882176396577616`*^9, {
   3.8882176981107635`*^9, 3.8882177110142937`*^9}, 3.888217854606846*^9, 
   3.888925499602955*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"ccf57ccf-ff49-460a-8adf-9bf8413dc07d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]t", "=", 
      RowBox[{"0.01", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Mu]r", "=", 
      RowBox[{"0.4", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Beta]min", "=", 
      RowBox[{"-", "0.01"}]}], ",", 
     RowBox[{"\[Beta]max", "=", "0.01"}]}], "}"}], ",", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"r", "/.", 
        RowBox[{"(", 
         RowBox[{"CriticalCurves", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "*", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PolarPlot", "[", 
      RowBox[{
       RowBox[{"r", "/.", 
        RowBox[{"(", 
         RowBox[{"CriticalCurves", "[", 
          RowBox[{"[", "3", "]"}], "]"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Phi]", ",", "0", ",", 
         RowBox[{"2", "*", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]", "*", " ", "\[Mu]t"}], "-", 
             RowBox[{
              SqrtBox["\[Mu]t"], " ", 
              SqrtBox[
               RowBox[{"4", "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "^", "2"}], "*", " ", "\[Mu]t"}]}]]}]}], 
            ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", " ", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"Case", " ", "1"}], ":", " ", "\[Theta]2"}], " ", "=", " ", 
       "0"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{
           FractionBox["1", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"\[Beta]", "*", " ", "\[Mu]t"}], "+", 
             RowBox[{
              SqrtBox["\[Mu]t"], " ", 
              SqrtBox[
               RowBox[{"4", "+", 
                RowBox[{
                 RowBox[{"\[Beta]", "^", "2"}], "*", " ", "\[Mu]t"}]}]]}]}], 
            ")"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", " ", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Case", " ", "2"}], ":", " ", 
       RowBox[{"\[Theta]2", " ", "!=", " ", "0"}]}], "*)"}], " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"\[Mu]r", "-", 
             RowBox[{"\[Theta]22", "^", "2"}]}], "]"}], ",", "\[Theta]22"}], 
          "}"}], "/.", 
         RowBox[{"\[Theta]22", "->", 
          RowBox[{"\[Beta]", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", "\[Mu]t"}], "-", 
              RowBox[{"1", "/", "\[Mu]r"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"\[Mu]r", "-", 
              RowBox[{"\[Theta]22", "^", "2"}]}], "]"}]}], ",", 
           "\[Theta]22"}], "}"}], "/.", 
         RowBox[{"\[Theta]22", "->", 
          RowBox[{"\[Beta]", "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "/", "\[Mu]t"}], "-", 
              RowBox[{"1", "/", "\[Mu]r"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"-", "1"}], ")"}]}]}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
        ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
      RowBox[{
       RowBox[{"Line", "[", "x__", "]"}], ":>", 
       RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", "All"}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<Critical Curves for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \
\(t\)], \(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``\>\"", ",", 
        RowBox[{"\[Mu]t", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}], ",", 
        RowBox[{"\[Mu]r", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8877084244080057`*^9, 3.887708450151267*^9}, {
  3.8877085030711565`*^9, 3.887708519093936*^9}, {3.8882174399703717`*^9, 
  3.888217461375684*^9}, {3.888217505935412*^9, 3.8882175480768204`*^9}, {
  3.8882175785935144`*^9, 3.88821762810476*^9}, {3.8882176905302334`*^9, 
  3.8882178325871296`*^9}, {3.8882179210744667`*^9, 3.8882179287747498`*^9}, {
  3.8889272805777206`*^9, 3.8889272827409472`*^9}, {3.888927569463793*^9, 
  3.888927652715308*^9}, {3.888928106994466*^9, 3.888928146346283*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"169983a1-b0e9-49e0-b1ec-cc07b77ff5ed"],

Cell[BoxData[
 GraphicsBox[{{{{{}, {}}, {}, GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPQpGwSjADQD2ewHg
      "], {}], {}, {{{}, {}, {}, {}}, {}}}, {}}, {{{{}, {}}, {}, {{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        LineBox[CompressedData["
1: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
hxKWQkpP7YJvoaCN+NTLhN02hey1j/VD09efKDsR3rrdaEjPzQUpNWmJnCR8
L9m90eqxMXgqft3dhrBIzYa9ZsxlsPmEziZ7wj/U9n0N2QgElifeGrgRTvni
5HEtJxTYNnQ1XyPsdMQr5ptrBPA1UqyMJGzhU/f6dUQkuHZwQjqLcFw/I91v
+CnIWMno/0E412L2yDkYAz6XMvMyEfNNMLuy6hsbB+7nJ6XuJPzBWVAxY/El
UOE+le5O+MJtSenbSkmgpFVSLI2wobmcVd2PZBAJRhYmCQvofvdVupUCZO70
au0j4r8zkKUwcXsqYFmHy/cIF+Rttt77+y3QUHCWHyA81Xg2Yio8HexJLyiF
xHpqeL17+mVfBth0r+nbG8LO5amZ5cOZQJpy3IKfyI+3gpP8Q08/gNheZrMQ
wn+anjt8X8kChmEP8q4T+bXdIKyS1pwNzhnd2MRE5J92K09jxNscQDlVxh9B
mNpRd+qd1SfQvyfOJ5/I3+0ufSq78vLBsz0q8aeIerghV/zA8WEBuOMXZCJC
1MsVrqHsrLOF4J7Vx0dthMvj9fs+ixYDilPI4Hmi3ia2RhgH3CgDcR2O4oOn
6CjEtXlXywkEfrDva2qxJ+IprC22RZTYhojHatQQ9Vx/+8yD0VkMuHbcVa4m
6l3Duow5+E0FOH/xsLywK7G+houlj8mVQHe1gncz0T/a1Z9O5HtVgrcvjeY0
z9HR7lGbZybaVYCjdikhgOg/JdJsos87vgClNx4ieheJ590zP+YGqoFAp6Zw
6CWivzz7xziRWg0+rP6n/PUyHc3v/5EfdKUG9CVPZnj6EP104Py+rQJ1wMvO
NWbZnxj/UbX/72t1wNnHpMOd6Ic6zgoWWf11IObVIZuBG3R0sttzKTe7HnA/
l9k+fJOOjNMuL+pYfAVlMoG/94fSkaJti+dCfBPYKapZJvKEjvh3Kx9yZ20G
hRUX+2eI/n6Fnhrqua8ZWAeJZTY9J+7/t3bqY3IzqLwYZ/ma+D6UxJiHqfm3
ACPZmOa4ZDpS9h/bZ6XUCq5+eBvWkUtHWxbspUNi2kDvde4h3E1HjzfsAvb9
bAOydoIqxT10tLKssZNfoB0kZq2ml/XT0fA7sWtqEe3ArWzT7X7i++h/ceWL
4q0OYIlnzsUs0pF1muauq1e7wIAo2a2T+N4+FuGXjv3UBaZTbN5dFGSg9OEX
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
31WHd6hoX8D/3/tRDHvzKF+9f81/7kQJAg==
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$39561#1"]& ]}, {}, {{{}, {}, {}, {}}, {}}}, \
{}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1:eJxN1GtIE3AUBfA5depKnU2yhjidz1ipoIYPIrCZQ9TlBF8Z6XQp01qrXL4g
A8PEQklFdBjZZsgqBSHUbYLOdCwDnVYTZybNjZQakkWIIRWh53/hcvh9uufT
DRJJhWIqhULJ+Lv/cn9a0zqLxLTQiX0Lxl9zkwh3DfF+MQj7Mk+36lzh20ur
eibhbRk/Qe8M9zfVi9hOsJ/s6rPl3ZADdxwLUtzYglMZK+UmGxybtNktsRBW
NL0Kn4cDTLdq1NPwUVUuV6iB2VE6VewQ7NDvPLSo4NlA/4GBbjhmdf5RQiu8
LaunudyDrUwX+88auMIhFKulcF1lWnZTKRyxNHLqcT7Rf7FKKhfAKYH24moe
/IFS6J+UCK81VrVERMEZ/JJrghC4f8bnUxwL5nzVpvK9YercRu9xV1gzezM8
eDf4wAvUuPX8LThLHVaYaYdHJi/QZRZ4TjKY+XYebskp8l2fgZ09hEKuDjax
H8gih+GCWqu9fIC4t5fl9a4XNsv5tp12mKmLuZ7VDP8oMXqU3IG/bMoanlfB
ASfWbWEV8MZnY9jFYrjoNyd/KgdWv7z/RpQOG1jGlbFkOPr9YtD5eJhqTC5r
joSf+C+oqaFwiiOuYJgFZ3dMmP184D5DndM3Bmw1Kbh6wlMS+t1KwpfVfdGT
3nA1b/SpxAtW7DUujB+CPU3L7u2Ec+WdZ8sJf49PGDxCuK8nsa2MDiuHQ8p8
PGA3pUFpd4cjS+fWtITP5HkWXiE86nwuV+sGN8oPd7URpo0lmsWElS+m8xiE
ay9xemw0uOGj1aIh3H6SHtBG+P//Cp74AxdaGXk=
        "]]},
      Annotation[#, "Charting`Private`Tag$39595#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1:eJxN1GtI02EUBvCl7m8kQ8tkNVEn25TQNLq46WJpaBdrSgqz1A8r02QNJTAy
Bxs405HmsDAxK7pYTkptSozSamLaEkHnslWilLrEqW2YqUyTitDnPXA4/OD5
cODACT6Tn5LtRqPRxH/731wrbWK1NJvixK75ybfxqnLCyUvFXXrCJfWtoauE
05atP296wnpDTJ1pI8zxPR0S7gX7aqIi5r3hmDfBCgkL5hdGLTC4sPxkpK52
Jyz9zvNz8eExRaWqOQ4ODM3QCY7D55Qx8hoJvM3H79cRKXxl4qDKLIODEnmR
TwtgRpFWmK6ErbviS75q4JETY52G6zBTWyPKvQPPNKUqZhpg47XiAqMePiwY
/JHXATsbjpbKe4j8HsuDBDPsmOuk5oaJe929IZ6xwQJZf2aXE+7j6psnXfDu
WZXnqAd33Y9z57NavWFOafvA4HaYX7EjfpALLzIzg+sj4WUmfcgYDZ9PyzS/
ioct4YEe9GTYGV0pDTgFh02pDzDPwtWvOZz0PDjrc0i56jJcqFmQzKrh25tk
lrBK+FmHn3dSLbGff5rC8BC+l1rUSG+BtzKFdu5LIv9uiX31LTwqcqQP9cO9
bLk9+wuslNw61jMBTxZ7TTGccMbz7sZaF8z7IOgzER5/7+NYJPwi2rFPsgwn
hOaYtqzAooD9tIrfcJC2rF1J462bIa62NxG2jHiyRgjnXPIvEm6A3ctWREuE
ba5Hwxfc4e6PtM33CeeqjYcGCOcn5bVFeMCfGtRV04TZFL2XRYcD9067JRJu
W7Vd1BGm6lwtVsIaqsBOUTAzLoUXRfj//+LF/gGokPwC
        "]]},
      Annotation[#, "Charting`Private`Tag$39625#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1:eJxd13k0VlsfB3BjioSUORRyyxyu2TYlUyVTJLPHPI8Ze8gcEpLnMURFlCiJ
UPYl15ChuN2kZMgQlW4yZSjv+fnzXeucddZnrbPO2uucffb+fg86+5uR6Gho
aBaJE64C2baKscZriO+2NnFQ0audryLA72gXChI0qIivRaUFTHEoOUBSoSK/
qa/6Fwnz8G8JH5ajIkHhwbNkwvuyn4pXCFPRgnl+eDzhPWQlxaotCnpaw1mT
RJj+vJRp3TMKqjTq+JVJeJ6TN6ldhYLs66V8S+B57mJjtfz5KENK6XcN4RnW
Q0Z57NdR1ru5ay3gj2LsDcx5KGel6G4fYc0C++dl33IRea1r13vCyneSU1Kn
c5BLdfDzWcJpedOqah3Z6IR9UdgyYbY6I4OjVVdRtw9rMY3JGlIUK3HfU5aF
2ibZl1kIuy9azJLZrqC04sp/9xMu0zUSe7mejtLEHd4JEjb5fpIn/3sasivp
mRInXOrSPL3ZmIIOkeJKZQirxO4aMq5MQs3OidpKhOMcWm/+6ZOA6D5c+qlB
WLYoWbRQJR4lZkVe1iV8MF76xRdJMrrks/DGgPAl29jc6k9RKF9BbQ7MN1Ok
vX8oCsXwRG6AawOefYvqiEKN8kNChoTHEzcNDMui0EbDHg+w2oPIX5POUahh
NWgFvMQQ7sY7GomqLdhZjAm7VfsrJ7yOQEGpxZwnCRvROo3YtIajuN4oUTD3
O3MPu5pwNHXcRBE8Vau/5FgUjired1iBY1wld3tEhKMjOYco4OrOVbUwuXAk
cSyE/xThfZmZBdmlYahPlsx1mvAHvqfneuJCEVWzXQx8d7F6pt8/FOH4DQVw
WG9p0KBdKGKv1jUHs8Umpw2rhKL+LNUrYJ0Js6ZPCyFoKKmNwZRw+Z05Xgbn
EFSjqDYDDlDgHlbXCUYR4eWLYCFyk2qubDB6SmKkPUP4ZY9d4RfBYPTwRDE/
WMbltgN1IwiZH1Q3BX+7KjezWheEMiX+aAD7/me8WCsehOwLW6PMCHvdJbMe
YQ1ESb43k8G8KyL+5I0AJPElLAfcrd35amguAM19Wb8LPjLMmpvUEYBU6f2H
wbNMBXxTFwOQeiqTgjnhvhdepzWn/ZHy4toYuFPr9aWjD3zR8OEbc+CCj9Zz
Sld8kWKJyiLYP+HDqeN+vkjI9dQOC8JcXTO8jpK+6LnsqgSYdHqt5lqFDzL8
cDwUTG8vOEJT6o1uXxraAmtFeSgMXfVEL/3EdloS3ntgnjIV4Inqb3iwg2da
ArcWTnui5sF+YXAmXdSL3Xs8UVkMnzZ4NDXDUSfNA63PVF8Ex+TXpt+Pd0ff
mHqXwI2PN6cuBZMQu5H1JvjnovjOntMktPjfEL0VYaVj5hJ7JUmIxv3hXnBd
dWVgyZQrkqPrkwHX3LH6/dTSFf36Wu4OLqM84F5RckHa3p5+4Kmh96oa+1yQ
wUmhUPAhLib7hO/OqEidFA8uyba7vbfSGbl32RSCCy4zy8nwOaNLudN94OwY
VyOPTUe0dGr0H/Cr5iu+NW8d0R++L4bBbOtNWSt1jmj4dfQ0OCOMYyjB1xG5
nDHaBHOMRXfqPHNAPFvJ4mcJ/2qTXa+Ls0O6Upkh4H/T8h0ozDZoXajyAlhN
wPvzVKc1St/XGA0uua8RKptojXTonySAfV59TOvcOouWVuRywQxcUvXLS1bo
ohLXQ7B8aetuszEL9PVEXB2Yeiz3elGhBVI8N9EA3nrudmjOxgLZJJBbwD0z
LMrk1+Zo/ptqD9hZ0sqlutsMnThQ8hF8teFzI3OdKQowtp0Grxo807MKNEUh
USyzYLt3V16WSpsitgmjefCZdc8XgWanUV7b8VUwOfG3cL/6SVS0VbEGNqm4
9SepwQSRNWk3wTw9BiabciboXWsWjTV8T/ac8KPixmh0VGIXeLRAvD+JwxD9
fVSJBVzZ0jt5IN0ApVxQYgWHTgSu1e0wQLd4uTnAu8Wfik5u6CPxIDMesHqt
aRSa0UPfehn5wEz/Lme9cdRD2Ueq+cH/rFLLfd/rIt/ZD4Jgb43pgYJXOig0
ulEUTOmK+ONnkxZ6KL3nMPhi/M0vUspaSMXUWhzcdSHPrtMLIbmJ3iNge0cV
r2IHDXRehlsSvHRiJCzUQg01qypJg1NlLl4yMVRBJvRSsmAh7kNZIppKiCP1
pxz48e/2wvVjioi5lyIPNp5xrxwQl0dKveyK4Ik+5voKATl0lIGsBOZTLS2+
v/so+iqrrwIOfCs5sGv8IIoxc1EFZ80HMPW6caIRj6FtL5/RdhXxmdXcGdK+
fT/pvGE3c9kB7GvG+ic4ITBjq1dCBu+cfKwAlhwQCWYrlcNvZBW2x3N9juym
XCWP36qlbI+Xlm7UxqlBEbMy1Mpsvz8+tZNpbUo4NPWhFPjNsXytR30qeG9v
kgRYy3hZfuStGp5Kqd1+n5zRNXzS/yGcwacvBo7IzjWPTNTCuzT6RMCf3AYo
dpzaOFahXhjczmZ8WFRGB5+d/8ELjnXSRA/d9PANRpHt7z2vGJWYu6SHm6v1
ucC2zE96wuOPY79HHnvByo/krDWL9XFbEjcz+AeDWGDPvwa4UmyKCew07NRQ
7WKIXSxvM4IH7hf/urpgiM3ct7bnZ7UVT5o1qzEWtBTent8eFSy3pvVOYjdr
1gnwN7GIz1vDpjiZgXMULJZ1PWNB+AyO1t79Hnx+/bHspPsZPOY7/Hr7/+v/
EdaxfAZnZY12givCfegzOMxx7q+ce2CXbgcBPkNL/LV+8A64QD4Ws2RZYi5a
xtvgwaJC519vLPH0Cb1CsFbQcMW4qxV2vyGVDj7Ab654h3wW/w695wke8tE/
pfDEBlccDCSBD7fNVnms22CNNQkncBj3ZZYi9XNYTDLOGszZ9rKLsfUc/lZS
qQ8+zW2jO9Rti506fgiDO1u9lSPf2+EqWRYBMBf3nuvVB+zxRAcPN9jN58Hy
Rwd7vDOckxVMz71cazxlj41mkn7C+oh8YqUOzDvgQhq37fXW9rIBh+OWI447
MtAJpq+naEUKO+HTsXJt4Lvjn/1ztZ1wxb2BevCaYkZ/1yUnbLA/6wY4b3zg
stxOZ6wtyugPHlS03UHP4YKHZV8xgo3GfTfKDpGwYLrxb9hvUvx4fJP0SVhU
pmkF/HyzbdTNi4QDTQI/gdV5edrEa0mYdUq/Cyxt1pZSqe2G9ZKvJG/vh+1c
XPcd3bFFUd4m7Jfv7mDZumJPnPk9chHM/afXzdw2T5x02ewz2Lx9377QGU9c
m/9+CNw77rmqKO2F19ksa8EtvPtaGp55YZWgaVfwzcsexs0j3ngPY/RfsJ97
+3O4tfH54XifjcfgcW5byQ0Nwlf97oHP/nX7h7yTHxbZJ5sH1uVQvlh2xw/P
bQh5gwUe2eenKPjjKMtHe8FuG5YkcfEArCNbYQ15gwvduj6vFYivk19gyEPh
HRqbESHB+J21yKNtX9Pd8ykhGD9NCiwHX3A1FLa4FowdJufTwZF0lnrS9cFY
qMTNBhyr6ZP+cTUYh4pbf4c8llxPFTCOCsGMvmrb+S6vfFVdID4Uj7+k04E8
WJf0MKblSjgusyfJgS8yTT3ILA3H9s7NwmCTFK4p+0fhuLpLe8uE8GRqlNHW
m3D8lP1JM5gj4zi3luAFHJ1pdAzskzP8oLXqAv6ImLggv4qU0E61d0dgu5Cx
BsjD2Y1njHroo3HrzS9/Q55eOZX/iZaLjGfmxHQ1CTe7rgXfEorHbS9k0yCP
Dzz6LlZpmYA1HNmyZQnfsmWqayclYb2J89p/EO5Qr3PXu5mC77GMdAgRLg8j
rw4/ScPnDqX2cMF6b6E5sNSejq+9LT65m/CcV/ar4F+ZmKejsZ8W1qd5OiuG
lCwsklB7F/rGrdbkN+Q7V/FY1u2f0EdG3Bk3cWs23m/q7T9COKgpm425OwfP
Lu3n6idce+SLYtJMLvafmlzHhE2PmxuxLlzDa5YG0Q8JNx2roz+7kodznMro
Swn3qY+/HOTIx9GqIwtZ0IcW+dNs+ChYNSa7Akybdr5uRZCCV0+oOYD/Fi4a
zRGhYM9Q194rhE1OCcr3S1KwuOz+cuhjNpXCIzqIgotEv1ulEw51EJOWdKVg
jR3p1cmEq3qkB3/fp+DJEzkuYH9n/82CWgqO4MjgAcuv1RxWaaDgQHXreOh7
TYflooL/ouDUBRPLRMKdcfKis4MUPDdU8xP64aSSctjAKgWb5o9Vgcv7L5T4
bVLwjXFaJ7AXqfEFCy0VL+0U7I4jvJCtKqTPTMVeT+ryoW/+nlfvahKgYsYn
F0zAbQkxP84epOIEJEMDTuRvEVgWo2KpmWB36Ku7DVGgjAwVWzLS8YNfjl0s
6JWnYseq+H7otzlhf/3tqUzFJ98vx4GtWGm/79Cg4v/rx/h/sk9WcQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$39655#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
       ArrowBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$39685#1"]& ]}, {}}},
  Axes->True,
  AxesOrigin->{0, 0},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& ), "CopiedValueFunction" -> ({
      Sqrt[Part[#, 1]^2 + Part[#, 2]^2], 
      Mod[
       ArcTan[
        Part[#, 1], 
        Part[#, 2]], 2 Pi]}& )},
  DisplayFunction->Identity,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{472.80000000000007`, Automatic},
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "RangePadding" -> Scaled[0.05]},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Critical Curves for \\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \
\\(t\\)], \\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\), \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \\(r\\)], \
\\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\\)\"", 
     StringForm[
     "Critical Curves for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \
\(t\)], \(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``", 0.01, 0.4], Editable -> False], TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8877084504871197`*^9, {3.887708509863446*^9, 3.8877085194349847`*^9}, {
   3.888217440708685*^9, 3.888217461887454*^9}, {3.888217508897294*^9, 
   3.888217548497839*^9}, {3.888217581280707*^9, 3.888217628706236*^9}, {
   3.8882176913953824`*^9, 3.888217705780637*^9}, 3.8882177436381598`*^9, {
   3.8882177821594815`*^9, 3.8882178331181536`*^9}, {3.8882179236771727`*^9, 
   3.8882179293176603`*^9}, 3.8889255013913746`*^9, 3.8889272831933155`*^9, {
   3.888927572693695*^9, 3.888927653158176*^9}, {3.888928110691933*^9, 
   3.888928146753106*^9}},
 CellLabel->"Out[83]=",ExpressionUUID->"258e10ab-faa8-4e4c-8dcc-4f3a3712f27e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", 
    RowBox[{"\[Beta]x", "=", 
     RowBox[{
      RowBox[{"Sqrt", "[", "\[Mu]r", "]"}], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"1", "/", "\[Mu]r"}], "-", 
        RowBox[{"1", "/", "\[Mu]t"}]}], ")"}]}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"Caustic", " ", "size", " ", "along", " ", "x", " ", "direction"}],
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.887710262378617*^9, 3.8877103972721095`*^9}, {
  3.8877104295569096`*^9, 3.887710439082342*^9}, {3.887710851774743*^9, 
  3.887710911544288*^9}, {3.8882176526946774`*^9, 3.8882176713907633`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"e6220d5b-421f-42dc-9f96-2d647fb5ff12"],

Cell[BoxData[
 RowBox[{
  SqrtBox["\[Mu]r"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox["1", "\[Mu]r"], "-", 
    FractionBox["1", "\[Mu]t"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.887710269141308*^9, 3.8877103980360546`*^9}, {
   3.8877104319357395`*^9, 3.8877104393119736`*^9}, 3.8877108774609423`*^9, 
   3.887710911844468*^9, {3.8882176568926363`*^9, 3.88821767172678*^9}, 
   3.88892550437459*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"39bd5422-14af-43d8-b910-752a001a0b30"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]t", "=", 
      RowBox[{"0.01", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Mu]r", "=", 
      RowBox[{"0.4", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"\[Beta]x", "=", 
    RowBox[{
     RowBox[{"Sqrt", "[", "\[Mu]r", "]"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"1", "/", "\[Mu]r"}], "-", 
       RowBox[{"1", "/", "\[Mu]t"}]}], ")"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8877109893833685`*^9, 3.8877110182691975`*^9}, {
  3.8882176813693457`*^9, 3.888217683245903*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"ad85b51a-b178-4ddc-a0b7-b064d831f42f"],

Cell[BoxData["0.616644143732834`"], "Output",
 CellChangeTimes->{{3.88771099028459*^9, 3.887711018533332*^9}, 
   3.8882176834702263`*^9, 3.888925506982927*^9},
 CellLabel->"Out[28]=",ExpressionUUID->"7672ccfd-4c11-443b-949d-9b2d29894d23"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Plotting", " ", "the", " ", "time", " ", "delay", " ", "curves"}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.88818855812282*^9, 3.8881886234003906`*^9}, {
   3.8882179792185955`*^9, 3.8882180314278464`*^9}, {3.888222148007577*^9, 
   3.8882221557407904`*^9}, 
   3.888925510500805*^9},ExpressionUUID->"be23250f-1730-45a8-aa2c-\
dcbed483a9f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Time", " ", "in", " ", "4", 
    SubscriptBox["M", "L"], " ", "and", " ", "angles", " ", "in", " ", 
    "\[Theta]E"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Ingredients", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{
     RowBox[{"Lens", " ", 
      RowBox[{"potential", ":", " ", "\[Psi]"}]}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "\[Kappa]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]1", "^", "2"}], " ", "+", 
          RowBox[{"\[Theta]2", "^", "2"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "/", "2"}], ")"}], "\[Gamma]", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Theta]1", "^", "2"}], " ", "-", " ", 
          RowBox[{"\[Theta]2", "^", "2"}]}], ")"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"\[Theta]E", "^", "2"}], " ", "Log", 
        RowBox[{"(", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"\[Theta]1", "^", "2"}], " ", "+", " ", 
           RowBox[{"\[Theta]2", "^", "2"}]}], " ", "]"}], ")"}], 
        "\[IndentingNewLine]", "This", " ", "can", " ", "be", " ", 
        "simplified", " ", "by", " ", "factoring", " ", "out", " ", "the", 
        " ", "Einstein", " ", 
        RowBox[{
        "radius", ":", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         "\[Psi]"}]}]}], "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]E", "^", 
         RowBox[{"2", " ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], "\[Kappa]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]1", "/", "\[Theta]E"}], ")"}], "^", "2"}], 
              " ", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]2", "/", "\[Theta]E"}], ")"}], "^", "2"}]}], 
             ")"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "2"}], ")"}], "\[Gamma]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]1", "/", "\[Theta]E"}], ")"}], "^", "2"}], 
              " ", "-", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"\[Theta]2", "/", "\[Theta]E"}], ")"}], "^", "2"}]}], 
             ")"}]}], " ", "+", " ", 
           RowBox[{"Log", 
            RowBox[{"(", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Theta]1", "/", "\[Theta]E"}], ")"}], "^", "2"}], 
               " ", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"\[Theta]1", "/", "\[Theta]E"}], ")"}], "^", "2"}]}],
               " ", "]"}], ")"}]}]}], "]"}]}], " ", "+", " ", 
        RowBox[{
        "const", " ", "\[IndentingNewLine]", "\[IndentingNewLine]", "Recall", 
         " ", "\[Theta]E"}]}], "=", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"4", "*", "M", "*", 
         RowBox[{"Dls", "/", 
          RowBox[{"(", 
           RowBox[{"Ds", "*", "Dl"}], ")"}]}]}], "]"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "and", " ", "the", " ", "actual", " ", "timing", " ", "potential", " ", 
      "t"}], " ", "=", " ", 
     RowBox[{"T", "*", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Theta]", "-", "\[Beta]"}], ")"}], "^", "2"}]}], " ", 
        "-", " ", "\[Psi]"}], "]"}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"where", " ", "T", "*"}], " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "zl"}], ")"}], "Dl", "*", 
      RowBox[{"Ds", "/", "Dls"}]}]}], ",", " ", 
    RowBox[{"but", " ", "we", " ", "can", " ", "pull", " ", "out", " ", 
     RowBox[{"\[Theta]E", "^", "2"}], " ", "inside", " ", "the", " ", 
     "bracket"}], ",", " ", 
    RowBox[{
     RowBox[{"this", " ", "left", " ", "us", " ", 
      RowBox[{"with", ":", "\[IndentingNewLine]", "T"}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "zl"}], ")"}], " ", "4", "Ml", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "/", "2"}], ")"}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Theta]", "/", "\[Theta]E"}], "-", 
            RowBox[{"\[Beta]", "/", "\[Theta]E"}]}], ")"}], "^", "2"}]}], " ",
         "-", " ", 
        RowBox[{"\[Psi]", "/", 
         RowBox[{"\[Theta]E", "^", "2"}]}]}], ")"}], "\[IndentingNewLine]", 
      "\t", "Main", " ", 
      RowBox[{"point", ":", " ", 
       RowBox[{
       "The", " ", "time", " ", "scale", " ", "is", " ", "set", " ", "by", 
        " ", "4", "Ml"}]}]}]}]}], "\[IndentingNewLine]", "*)"}]}]], "Input",
 CellChangeTimes->{{3.888926291214538*^9, 3.8889263081488276`*^9}, {
  3.8889263651254225`*^9, 3.888926371228877*^9}, {3.8895638608597293`*^9, 
  3.8895638892022324`*^9}, {3.8895639463046246`*^9, 3.8895641296959476`*^9}, {
  3.8895645557725487`*^9, 3.889564612930725*^9}, {3.889564947401615*^9, 
  3.8895649479018364`*^9}, {3.8895656754062047`*^9, 
  3.88956590774231*^9}},ExpressionUUID->"08af9361-c3e5-486e-b899-\
b1b863cbfd73"],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Psi]d", "[", 
   RowBox[{
   "\[Theta]1_", ",", "\[Theta]2_", ",", "\[Beta]1_", ",", "\[Beta]2_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Theta]1", "-", "\[Beta]1"}], ")"}], "^", "2"}], " ", "+", 
      " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"\[Theta]2", "-", "\[Beta]2"}], ")"}], "^", "2"}]}], ")"}]}], 
   " ", "-", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"\[Theta]1", "^", "2"}], " ", "+", " ", 
      RowBox[{"\[Theta]2", "^", "2"}]}], "]"}], "]"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], "*", "\[Kappa]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Theta]1", "^", "2"}], " ", "+", " ", 
      RowBox[{"\[Theta]2", "^", "2"}]}], ")"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], "*", "\[Gamma]", "*", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Theta]1", "^", "2"}], " ", "-", 
      RowBox[{"\[Theta]2", "^", "2"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8889255562658997`*^9, 3.888925611082002*^9}, {
  3.8889260785128736`*^9, 3.8889261619111633`*^9}, {3.8889262318150387`*^9, 
  3.8889262752178307`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"eea1a492-5d1e-4b3b-b785-f716dc99e747"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Block", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Mu]t", "=", 
      RowBox[{"0.01", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Mu]r", "=", 
      RowBox[{"0.4", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}], ",", 
     RowBox[{"\[Beta]min", "=", 
      RowBox[{"-", "1"}]}], ",", 
     RowBox[{"\[Beta]max", "=", "1"}], ",", 
     RowBox[{"\[Kappa]", "=", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Mu]r", "^", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}], "+", 
          RowBox[{"\[Mu]t", "^", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}]}], ")"}], "/", "2"}]}]}], ",", 
     RowBox[{"\[Gamma]", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Mu]t", "^", 
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}]}], "-", 
         RowBox[{"\[Mu]r", "^", 
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}]}]}], ")"}], "/", "2"}]}]}], "}"}], ",", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"\[Psi]d", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "*", " ", "\[Mu]t"}], "-", 
            RowBox[{
             SqrtBox["\[Mu]t"], " ", 
             SqrtBox[
              RowBox[{"4", "+", 
               RowBox[{
                RowBox[{"\[Beta]", "^", "2"}], "*", " ", "\[Mu]t"}]}]]}]}], 
           ")"}]}], ",", "0", ",", "\[Beta]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", "Orange", "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Plot", "[", 
      RowBox[{
       RowBox[{"\[Psi]d", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Beta]", "*", " ", "\[Mu]t"}], "+", 
            RowBox[{
             SqrtBox["\[Mu]t"], " ", 
             SqrtBox[
              RowBox[{"4", "+", 
               RowBox[{
                RowBox[{"\[Beta]", "^", "2"}], "*", " ", "\[Mu]t"}]}]]}]}], 
           ")"}]}], ",", "0", ",", "\[Beta]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], ",", 
       RowBox[{"PlotStyle", "->", 
        RowBox[{"{", 
         RowBox[{"Darker", "[", "Green", "]"}], "}"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Beta]", "*", " ", "\[Mu]t"}], "-", 
               RowBox[{
                SqrtBox["\[Mu]t"], " ", 
                SqrtBox[
                 RowBox[{"4", "+", 
                  RowBox[{
                   RowBox[{"\[Beta]", "^", "2"}], "*", " ", "\[Mu]t"}]}]]}]}],
               ")"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
          ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
        RowBox[{
         RowBox[{"Line", "[", "x__", "]"}], ":>", 
         RowBox[{"Arrow", "[", "x", "]"}]}]}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
          RowBox[{"Case", " ", "1"}], ":", " ", "\[Theta]2"}], " ", "=", " ", 
         "0"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ParametricPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             FractionBox["1", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Beta]", "*", " ", "\[Mu]t"}], "+", 
               RowBox[{
                SqrtBox["\[Mu]t"], " ", 
                SqrtBox[
                 RowBox[{"4", "+", 
                  RowBox[{
                   RowBox[{"\[Beta]", "^", "2"}], "*", " ", "\[Mu]t"}]}]]}]}],
               ")"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Beta]", ",", "\[Beta]min", ",", "\[Beta]max"}], "}"}], 
          ",", 
          RowBox[{"PlotStyle", "->", 
           RowBox[{"{", 
            RowBox[{"Orange", ",", "Dashed"}], "}"}]}]}], "]"}], "/.", " ", 
        RowBox[{
         RowBox[{"Line", "[", "x__", "]"}], ":>", 
         RowBox[{"Arrow", "[", "x", "]"}]}]}], ","}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"Case", " ", "2"}], ":", " ", 
       RowBox[{"\[Theta]2", " ", "!=", " ", "0"}]}], "*)"}], " ", 
     "\[IndentingNewLine]", 
     RowBox[{"PlotRange", "->", "Automatic"}], ",", 
     RowBox[{"PlotLabel", "->", 
      RowBox[{"StringForm", "[", 
       RowBox[{
       "\"\<Time delay for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \
\(t\)], \(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``\>\"", ",", 
        RowBox[{"\[Mu]t", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}], ",", 
        RowBox[{"\[Mu]r", "^", 
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8889265529867873`*^9, 3.888926561921507*^9}, {
  3.8889265964475937`*^9, 3.8889266159619427`*^9}, {3.8889266474591665`*^9, 
  3.888926931022683*^9}, {3.8889270614024053`*^9, 3.888927063662668*^9}, {
  3.8889271624364967`*^9, 3.888927212265106*^9}, {3.888927254040914*^9, 
  3.888927258172454*^9}, {3.8889273317877655`*^9, 3.888927438931351*^9}, {
  3.8889275353998213`*^9, 3.8889275601476555`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"5791397d-e620-4af4-8f84-96378bb2b26e"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[1, 0.5, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1: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
M+P8/R9bJlXI
        "]]},
      Annotation[#, "Charting`Private`Tag$32789#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0, 
        NCache[
         Rational[2, 3], 0.6666666666666666], 0], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$32841#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
    InterpretationBox[
    "\"Time delay for \\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \
\\(t\\)], \\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.01`\\\", TraditionalForm]\\), \
\\!\\(\\*SuperscriptBox[SubscriptBox[\\(\[Mu]\\), \\(r\\)], \
\\(-1\\)]\\)=\\!\\(\\*FormBox[\\\"0.4`\\\", TraditionalForm]\\)\"", 
     StringForm[
     "Time delay for \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(t\)], \
\(-1\)]\)=``, \!\(\*SuperscriptBox[SubscriptBox[\(\[Mu]\), \(r\)], \
\(-1\)]\)=``", 0.01, 0.4], Editable -> False], TraditionalForm],
  PlotRange->Automatic,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8889265386896243`*^9, 3.8889265743962417`*^9, 3.8889266163575068`*^9, {
   3.888926876448351*^9, 3.8889269194396267`*^9}, 3.888927063955634*^9, {
   3.888927171794115*^9, 3.888927212491248*^9}, 3.8889272584944773`*^9, {
   3.8889273501195965`*^9, 3.888927439401774*^9}, {3.88892753886138*^9, 
   3.8889275606956067`*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"721068e4-d571-445d-93ea-19bc0938900b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[Psi]d", "[", 
        RowBox[{"0", ",", 
         RowBox[{
          FractionBox["1", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"a", "*", " ", "\[Mu]t"}], "-", 
            RowBox[{
             SqrtBox["\[Mu]t"], " ", 
             SqrtBox[
              RowBox[{"4", "+", 
               RowBox[{
                RowBox[{"a", "^", "2"}], "*", " ", "\[Mu]t"}]}]]}]}], ")"}]}],
          ",", "0", ",", "a"}], "]"}], "/.", 
       RowBox[{"\[Kappa]", "->", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Mu]r", "^", 
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}]}], "+", 
            RowBox[{"\[Mu]t", "^", 
             RowBox[{"(", 
              RowBox[{"-", "1"}], ")"}]}]}], ")"}], "/", "2"}]}]}]}], "/.", 
      RowBox[{"\[Gamma]", "->", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Mu]t", "^", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}], "-", 
          RowBox[{"\[Mu]r", "^", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}]}], ")"}], "/", "2"}]}]}], "/.", 
     RowBox[{"\[Mu]t", "->", 
      RowBox[{"0.01", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}]}]}], "/.", 
    RowBox[{"\[Mu]r", "->", 
     RowBox[{"0.4", "^", 
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}]}]}]}], "/.", 
   RowBox[{"a", "->", "0.0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8889270101218824`*^9, 3.888927030768793*^9}, {
  3.888927075924816*^9, 3.888927152625523*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"22ed9708-a90b-4248-99e5-cc20fa09e387"],

Cell[BoxData["97.19741490700595`"], "Output",
 CellChangeTimes->{{3.8889269976759577`*^9, 3.8889270311982756`*^9}, {
  3.888927111103166*^9, 3.8889271533854933`*^9}},
 CellLabel->"Out[51]=",ExpressionUUID->"c853028e-ba4f-4481-9726-a214f101d21a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"Question", ":", " ", 
   RowBox[{"What", " ", "about", " ", "the", " ", "other", " ", "two", " ", 
    RowBox[{"images", "?"}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8889275156682816`*^9, 3.888927521347986*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"4cb28bce-9a0c-47a1-a724-d199d2d10297"]
},
WindowSize->{1152., 579.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1. Inherited,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 2, 2021)",
StyleDefinitions->"ReverseColor.nb",
ExpressionUUID->"1020d6dd-0c26-46d9-8ea2-2fc8e9e81949"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1144, 29, 67, "Input",ExpressionUUID->"5e3cc4f3-20b4-4134-b9b9-595bde6e3203"],
Cell[1705, 51, 458, 10, 28, "Input",ExpressionUUID->"a1e99ac4-be4d-4c4f-b2ab-7459cd149aad"],
Cell[2166, 63, 276, 5, 28, "Input",ExpressionUUID->"fee3fe43-1b07-49b8-b9da-08f084534d52"],
Cell[CellGroupData[{
Cell[2467, 72, 822, 20, 28, "Input",ExpressionUUID->"0be4804c-94e8-409c-9076-c7c38b909d24"],
Cell[3292, 94, 1861, 51, 57, "Output",ExpressionUUID->"d055ed44-a1f2-42af-86a9-f82640631bc9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5190, 150, 710, 17, 28, "Input",ExpressionUUID->"23d917ee-3e57-4e73-b64e-e88e1b0ca9a5"],
Cell[5903, 169, 1118, 32, 51, "Output",ExpressionUUID->"b9c1ad92-70db-4de4-8412-8168e67acda5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7058, 206, 491, 11, 28, "Input",ExpressionUUID->"0914b705-5b1c-4681-998c-292d5de97f79"],
Cell[7552, 219, 760, 17, 54, "Output",ExpressionUUID->"92b49e8a-37d3-40f0-bf65-cabd1a583bf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8349, 241, 940, 23, 50, "Input",ExpressionUUID->"2ebab91d-e9c4-4146-bd65-6ac968b9b58e"],
Cell[9292, 266, 4415, 125, 177, "Output",ExpressionUUID->"c71b24c9-acd4-40ac-bbe2-98f9d3657672"]
}, Open  ]],
Cell[13722, 394, 705, 18, 48, "Input",ExpressionUUID->"88430ed1-3e9c-4288-b087-57eccda1795f"],
Cell[CellGroupData[{
Cell[14452, 416, 3040, 68, 91, "Input",ExpressionUUID->"8ee6261b-9d23-454c-b6dc-874afad923d8"],
Cell[17495, 486, 29104, 514, 164, "Output",ExpressionUUID->"18cea735-4410-48d0-8742-8c50aa5e26f4"]
}, Open  ]],
Cell[46614, 1003, 289, 6, 28, "Input",ExpressionUUID->"642fcf97-6edd-4aa3-82e1-e5ea41e7dc59"],
Cell[CellGroupData[{
Cell[46928, 1013, 3249, 81, 110, "Input",ExpressionUUID->"c93856f9-fc6d-447e-8ca2-8ee9e5b38cad"],
Cell[50180, 1096, 26476, 449, 66, "Output",ExpressionUUID->"d7624c4a-28b5-4c73-bbd9-c8e7d9982395"]
}, Open  ]],
Cell[76671, 1548, 471, 10, 28, "Input",ExpressionUUID->"d6082083-7d08-4968-acc5-de1dd16ff04c"],
Cell[77145, 1560, 1042, 29, 67, "Input",ExpressionUUID->"9b8bd6fb-62c6-419f-a03a-35c746e31c64"],
Cell[78190, 1591, 1544, 42, 86, "Input",ExpressionUUID->"e5fa19f9-81d0-4c93-bed6-8ee6f539f02f"],
Cell[79737, 1635, 306, 5, 28, "Input",ExpressionUUID->"5e8c54a6-e072-4b95-98b5-138b2602ab2b"],
Cell[80046, 1642, 644, 13, 48, "Input",ExpressionUUID->"9aa03c30-7d13-4d02-802a-f3e56a2c79e3"],
Cell[80693, 1657, 1227, 30, 86, "Input",ExpressionUUID->"9a549dd8-bb01-4348-8db5-3f501189410e"],
Cell[81923, 1689, 367, 7, 28, "Input",ExpressionUUID->"6490b875-81fd-4a85-96ab-073720484bea"],
Cell[82293, 1698, 1623, 41, 105, "Input",ExpressionUUID->"4369cff3-8820-4d75-82dc-2b258f53b80a"],
Cell[CellGroupData[{
Cell[83941, 1743, 1048, 27, 28, "Input",ExpressionUUID->"f39b15cd-915d-4c8e-87d2-9be3e1874a8f"],
Cell[84992, 1772, 449, 11, 69, "Output",ExpressionUUID->"23ae38aa-07cc-424f-b987-2d0c4c44f879"]
}, Open  ]],
Cell[85456, 1786, 151, 3, 28, "Input",ExpressionUUID->"96256fee-0c9b-4a05-a175-30ea4d2ba839"],
Cell[85610, 1791, 347, 6, 28, "Input",ExpressionUUID->"de5c4d49-5664-4dcd-b0ee-a82cffd5c63f"],
Cell[CellGroupData[{
Cell[85982, 1801, 3926, 97, 131, "Input",ExpressionUUID->"8a8c7b5b-3d33-42f3-8ed7-b70a019f3bd3"],
Cell[89911, 1900, 24255, 415, 87, "Output",ExpressionUUID->"322bf4b9-37f2-4979-bf81-cf38a27c01fc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114203, 2320, 6444, 176, 263, "Input",ExpressionUUID->"bc51a88a-bd7b-4a54-bbc3-867afb297f27"],
Cell[120650, 2498, 31815, 567, 140, "Output",ExpressionUUID->"96512699-98b9-4457-897a-cd308c5eb439"]
}, Open  ]],
Cell[152480, 3068, 1066, 27, 67, "Input",ExpressionUUID->"98946a44-dbef-4739-9acb-fe4f8ed998e3"],
Cell[CellGroupData[{
Cell[153571, 3099, 597, 16, 28, "Input",ExpressionUUID->"212d262c-3637-41ec-a651-f42f0eaa69cf"],
Cell[154171, 3117, 344, 9, 51, "Output",ExpressionUUID->"f8b0040f-aba3-4127-b014-a7826edd17d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154552, 3131, 711, 21, 28, "Input",ExpressionUUID->"09fc7755-016a-4e0a-877a-1e84f689233f"],
Cell[155266, 3154, 218, 3, 32, "Output",ExpressionUUID->"55deacb4-245f-40aa-9c61-a484901bd768"]
}, Open  ]],
Cell[155499, 3160, 249, 5, 28, "Input",ExpressionUUID->"7fb9aae4-649a-4b35-8900-49751db71a44"],
Cell[CellGroupData[{
Cell[155773, 3169, 3656, 93, 131, "Input",ExpressionUUID->"07f9ec08-8715-453c-87e0-a1a2457c965e"],
Cell[159432, 3264, 24454, 419, 95, "Output",ExpressionUUID->"ccf57ccf-ff49-460a-8adf-9bf8413dc07d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183923, 3688, 6621, 178, 263, "Input",ExpressionUUID->"169983a1-b0e9-49e0-b1ec-cc07b77ff5ed"],
Cell[190547, 3868, 40103, 705, 531, "Output",ExpressionUUID->"258e10ab-faa8-4e4c-8dcc-4f3a3712f27e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230687, 4578, 747, 18, 28, "Input",ExpressionUUID->"e6220d5b-421f-42dc-9f96-2d647fb5ff12"],
Cell[231437, 4598, 493, 11, 51, "Output",ExpressionUUID->"39bd5422-14af-43d8-b910-752a001a0b30"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231967, 4614, 764, 22, 28, "Input",ExpressionUUID->"ad85b51a-b178-4ddc-a0b7-b064d831f42f"],
Cell[232734, 4638, 239, 3, 32, "Output",ExpressionUUID->"7672ccfd-4c11-443b-949d-9b2d29894d23"]
}, Open  ]],
Cell[232988, 4644, 394, 8, 28, "Input",ExpressionUUID->"be23250f-1730-45a8-aa2c-dcbed483a9f6"],
Cell[233385, 4654, 5592, 146, 257, "Input",ExpressionUUID->"08af9361-c3e5-486e-b899-b1b863cbfd73"],
Cell[238980, 4802, 1432, 42, 28, "Input",ExpressionUUID->"eea1a492-5d1e-4b3b-b785-f716dc99e747"],
Cell[CellGroupData[{
Cell[240437, 4848, 6170, 167, 255, "Input",ExpressionUUID->"5791397d-e620-4af4-8f84-96378bb2b26e"],
Cell[246610, 5017, 21361, 374, 258, "Output",ExpressionUUID->"721068e4-d571-445d-93ea-19bc0938900b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268008, 5396, 1771, 53, 74, "Input",ExpressionUUID->"22ed9708-a90b-4248-99e5-cc20fa09e387"],
Cell[269782, 5451, 245, 3, 32, "Output",ExpressionUUID->"c853028e-ba4f-4481-9726-a214f101d21a"]
}, Open  ]],
Cell[270042, 5457, 342, 6, 28, "Input",ExpressionUUID->"4cb28bce-9a0c-47a1-a724-d199d2d10297"]
}
]
*)

